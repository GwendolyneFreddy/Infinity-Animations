/* ============================================================== *
 *  INFINITY ANIMATIONS : BG1 Animations for Saved Games routine  *
 * ============================================================== */

INCLUDE ~infinityanimations/lib/t-animfix.tpa~

ACTION_IF NOT FILE_EXISTS ~infinityanimations/batch/t-gamlog.txt~ BEGIN
	<<<<<<<< .../infinityanimations-inlined/t-gamlog.txt
SaveGame	Char	Name	Diff	OldAnim	OldAnimText	NewAnim	NewAnimText
>>>>>>>>

	COPY ~.../infinityanimations-inlined/t-gamlog.txt~ ~infinityanimations/batch~
END

OUTER_SPRINT t01 @93	// (Invalid Offhand Item)
OUTER_SPRINT t02 @94	// (Katana Proficiency)
OUTER_SPRINT t03 @95	// (Scimitar Proficiency)
OUTER_SPRINT t04 @96	// (Two Weapon Proficiency)
OUTER_SPRINT t05 @97	// (Scimitar or Katana)
OUTER_SPRINT t06 @98	// Patch
OUTER_SPRINT t07 @99	// [Y/N]?
OUTER_SPRINT t08 @100	// has an item or proficiency that may crash the game with the new animation
OUTER_SPRINT t09 @101	// Patch anyway [Y/N]?
OUTER_SPRINT t10 @102	// Updating .gam file in
OUTER_SPRINT t11 @103	// Updating .sav file in

OUTER_SPRINT t-scim ~ _sw1h15 _sw1h16 _sw1h20 _sw1h22 _sw1h23 agbladen agsw1h04 aqaticsc bhsw1h01 bitswe blacknig c2sw1h02 c2sw1h03 cb35ass1 cb35ass2 cbhblfet cbhbsldv cbhbslzp cbmtscim cbmtswkt cbsbmlt5 cdkat2 chlosw1 chlosw2 chlosw3 cm1h08 curkat d0t#sw12 d1belm darklite deitm044 deitm045 deitm069 deitm070 deitm071 deitm072 deitm095 deitm109 deitm118 drizztde drizztfr drowbmsc dskatan1 dskatan2 dsswd01 dsswd03 dsswd04 dsswd05 dsswd06 dstears dvenkata dvenscim dvgasfrm dw#dwkat dwsw1h01 elemkata elemkate elemkatf elemkatw enteri1 fhsw1 fhsw3 firkat frozkat fwsw1h04 fwsw1h10 fwsw1h11 fwsw1h13 grean icekat ikkat01a ikkat02a ikkat03a ikkat04a ikkat05a ikkat06a ikkat08a ikkat09a ikkat10a ikkat11a ikkat12a ikkat18a ikkat19a ikkat20a ikkat21a ikkat22a ikkat24a ikkat25a ikkat26a ikkat27a ikkat43a ikkat44a ikkat45a ikkat51a ikkat55a ikkat70a ikkat71a ikkat75a jarlaxc1 jarlaxsc katanacr katanat katofpow kibaday kibaxx m#mgift m#mgift2 m#mgiftl misc9q moonlite newkat01 newkat02 newsci01 newsci02 newsci03 npsw02 npsw04 o!bom038 o!bom042 rr#dmari rtt015 rtt035 scim01 scimamne scimflam sd_2sw1 sd_2sw2 sdnpcsw3 sdnpcsw4 serend sgsw1h5 sgsw1h6 sgsw1h7 shdwsam1 shdwsam2 shdwsam3 shdwsam4 solak1 succub sw1h15 sw1h16 sw1h20 sw1h22 sw1h23 sw1h30 sw1h43 sw1h44 sw1h45 sw1h50 sw1h51 sw1h52 sw1h55 sw1h56 sw1h66 sw1h67 sw1h68 sw1h68c sw1h69 sw1h69c sw1h70 sw1h71 sw1h75 sw1h76 sw1h78 sw1hwk swkat swzzz1 swzzz2 tcilhsw tcsw1h02 tcsw1h03 tcsw1h11 tcsw1h15 thunder tzsw1h03 tzsw1h04 tzsw1h06 tzsw1h07 u#s1h05a u#sw1h05 u#sw1h06 u#sw1h07 valiant wa2dak wa2dak2 wa2dak3 wa2dak4 wa2dak5 wuhaltai wujen yoshkata zyscimit zysw1hn2 zytdagn1 ~

OUTER_SPRINT t-shld ~ _ishld02 _ishld03 _shld01 _shld02 _shld03 _shld04 _shld05 _shld06 _shld07 _shld08 _shld09 _shld10 _shld11 _shld12 _shld13 _shld14 _shld15 _shld16 _shld18 _shld19 _shld20 _shld99 a!brsb accshld agshld01 agshld02 bruensh buck02 bw05ish1 c2anom01 c2shld01 c2shld02 cb351g03 cbcl005 cbcl037 cbcl058 cblyshld cbmhshld cbmilt03 cbmilt13 cbpdofcm cbrjr015 cbrolfsh cbsbmltw cbsbmltx cbsbmlty cbshldwk cbshsoub cbtempus cbtssd01 cbwtni5a chalshld cmgforg8 cmshld01 cmshld03 cmshld04 cmshld05 cmshq01 cmshq02 coms01 coms02 d1shld01 d1shld02 darshld deitm119 deitm120 deitm121 deitm122 dscushld dshld dshld01 dsjeshld dsshld02 dsshld51 dsshld52 dsshld53 dsshld54 dwshld01 elemshld fireshld frozshld fwshld01 gcmsh01 gcmsh02 gmd03 guardshz holyshld i1sh001 iibwlsh1 ishld02 ishld03 m#buck2 mashld01 mgishld1 mgishld2 mystery newshp1 newshpo newsl01 newsl02 newsm01 newss01 newss02 newss03 npshld nsshld01 nsshld02 ntshld01 ntshld02 ntshld03 o!bom027 orrshld psmade23 psmade24 psmade25 psmade26 psshld01 r!kitshd r#asshld r#runed revenan rr#buc01 rr#buc02 rr#buc03 rr#buc04 rr#guara rr#guarb rr#guarc rr#lyre rr#rward rr#shl01 rr#shl02 rtt020 s#shld01 sgshld1 shghost shld01 shld02 shld03 shld04 shld05 shld06 shld07 shld08 shld09 shld10 shld11 shld12 shld13 shld14 shld15 shld16 shld17 shld18 shld19 shld20 shld21 shld22 shld23 shld24 shld25 shld26 shld27 shld28 shld29 shld30 shld31 shld32 shld99 shldgraz shldoth shldred skelshld starshld tcaltsh1 tcaltsh2 tcshld01 tcshld02 tcshld03 tcshldxx tcvilds1 tcvilds2 ttshld01 tzshld01 u#shld01 ushld3b wa2shiel waukeen x#ajshld x#fai3 x#fash01 zyshldn1 zyshldn2 ~

DEFINE_PATCH_MACRO t-bg1gam BEGIN
	t-diff = 0
	SPRINT t-prob ~~
	READ_SLONG (t-cf + 8) t-nr
	PATCH_IF t-nr < 1 BEGIN
		READ_ASCII (t-pf + i * 0x160 + 0xc0) t-nm (32) NULL
	END ELSE BEGIN
		READ_STRREF (t-cf + 8) t-nm
		lnc = STRING_LENGTH ~%t-nm%~
		PATCH_IF lnc > 32 BEGIN
			INNER_PATCH ~%t-nm%~ BEGIN
				READ_ASCII 0 t-nm (32) NULL // Truncate long names
			END
		END
	END
	READ_SHORT (t-cf + 0x28) t-an // Animation ID
	PATCH_IF ((t-an > 0x4fff) AND (t-an < 0x5004)) OR ((t-an > 0x500f) AND (t-an < 0x5014)) OR ((t-an > 0x50ff) AND (t-an < 0x5104)) OR ((t-an > 0x510f) AND (t-an < 0x5114)) OR ((t-an > 0x51ff) AND (t-an < 0x5203)) OR ((t-an > 0x520f) AND (t-an < 0x5213)) OR ((t-an > 0x52ff) AND (t-an < 0x5304)) OR ((t-an > 0x530f) AND (t-an < 0x5314)) BEGIN
		LOOKUP_IDS_SYMBOL_OF_INT t-old animate %t-an%
		t-an += 0x1000
		LOOKUP_IDS_SYMBOL_OF_INT t-new animate %t-an%
		WRITE_SHORT (t-cf + 0x28) t-an // Fix _LOW animations
	END
	PATCH_IF (((t-an > 0x5fff) AND (t-an < 0x6005)) OR ((t-an > 0x600f) AND (t-an < 0x6016)) OR ((t-an > 0x60ff) AND (t-an < 0x6106)) OR ((t-an > 0x610f) AND (t-an < 0x6116)) OR ((t-an > 0x61ff) AND (t-an < 0x6206)) OR ((t-an > 0x620f) AND (t-an < 0x6216)) OR ((t-an > 0x62ff) AND (t-an < 0x6306)) OR ((t-an > 0x630f) AND (t-an < 0x6316))) BEGIN
		READ_LONG (t-cf + 0x2b8) t-slots
		t-slots += t-cf
		READ_LONG (t-cf + 0x2bc) t-itoff
		t-itoff += t-cf
		READ_SSHORT (t-slots + 4) t-shsl
		PATCH_IF (t-shsl > (0 - 1)) BEGIN
			READ_ASCII (t-shsl * 0x14 + t-itoff) t-shie ELSE ~None~
			TO_LOWER t-shie
			PATCH_IF (~%t-shld%~ STRING_CONTAINS_REGEXP ~ %t-shie% ~ = 1) BEGIN
				SPRINT t-prob ~%t-prob% %t01%~ // Invalid Offhand Item
				t-diff += 1
			END
		END
		PATCH_IF t-diff = 0 BEGIN
			READ_LONG (t-cf + 0x2c4) t-efoff
			t-efoff += t-cf
			READ_LONG (t-cf + 0x2c8) t-efcnt
			FOR (t = 0 ; t < t-efcnt ; t += 1) BEGIN
				READ_LONG (t * 0x108 + t-efoff + 8) t-opc ELSE 0
				PATCH_IF t-opc = 233 BEGIN
					READ_LONG (t * 0x108 + t-efoff + 0x14) t-star ELSE 0
					READ_LONG (t * 0x108 + t-efoff + 0x18) t-prof ELSE 0
					PATCH_IF (t-star > 0) AND (t-prof = 94) BEGIN
						SPRINT t-prob ~%t-prob% %t02%~ // Katana Proficiency
						t-diff += 1
					END
					PATCH_IF (t-star > 0) AND (t-prof = 95) BEGIN
						SPRINT t-prob ~%t-prob% %t03%~ // Scimitar Proficiency
						t-diff += 1
					END
					PATCH_IF (t-star > 0) AND (t-prof = 114) BEGIN
						SPRINT t-prob ~%t-prob% %t04%~ // Two Weapon Proficiency
						t-diff += 1
					END
				END
			END
		END
		PATCH_IF t-diff = 0 BEGIN
			READ_LONG (t-cf + 0x2c0) t-itcnt
			FOR (t = 0 ; t < t-itcnt ; t += 1) BEGIN
				READ_ASCII (t * 0x14 + t-itoff) t-item ELSE ~None~
				PATCH_IF (~%t-scim%~ STRING_CONTAINS_REGEXP ~ %t-item% ~ = 0) BEGIN
				SPRINT t-prob ~%t-prob% %t05%~ // Scimitar or Katana
				t-diff += 1
				END
			END
		END
		SPRINT t-rdl ~y~
		PATCH_IF t-mod = 0 BEGIN
			PATCH_PRINT ~%t06% %t-to%: %t-nm% (%t-cn%) %t07%~ // Patch [file] [Y/N]?
			PATCH_READLN t-rdl
		END
		PATCH_IF (t-diff > 0) AND (t-mod = 1) BEGIN
			PATCH_PRINT ~%t-to% (%t-nm%) %t08%%t-prob%.
%t09%~ // [File] has an item or proficiency that may crash the game with the new animation. Patch anyway [Y/N]?
			PATCH_READLN t-rdl
		END
		PATCH_IF (~%t-rdl%~ STRING_EQUAL_CASE ~y~ = 1) BEGIN
			PATCH_IF (t-an = 0x6000) OR (t-an = 0x6005) BEGIN // CLERIC_MALE_HUMAN
				t-new = 0x6410
			END
			PATCH_IF t-an = 0x6001 BEGIN // CLERIC_MALE_ELF
				t-new = 0x6412
			END
			PATCH_IF (t-an = 0x6002) OR (t-an = 0x6004) BEGIN // CLERIC_MALE_DWARF
				t-new = 0x6414
			END
			PATCH_IF t-an = 0x6003 BEGIN // CLERIC_MALE_HALFLING
				t-new = 0x6416
			END
			PATCH_IF (t-an = 0x6010) OR (t-an = 0x6015) BEGIN // CLERIC_FEMALE_HUMAN
				t-new = 0x6411
			END
			PATCH_IF t-an = 0x6011 BEGIN // CLERIC_FEMALE_ELF
				t-new = 0x6413
			END
			PATCH_IF (t-an = 0x6012) OR (t-an = 0x6013) OR (t-an = 0x6014) BEGIN //CLERIC_FEMALE_HALFLING
				t-new = 0x6417
			END
			PATCH_IF (t-an = 0x6100) OR (t-an = 0x6105) BEGIN // FIGHTER_MALE_HUMAN
				t-new = 0x6420
			END
			PATCH_IF t-an = 0x6101 BEGIN // FIGHTER_MALE_ELF
				t-new = 0x6422
			END
			PATCH_IF (t-an = 0x6102) OR (t-an = 0x6104) BEGIN // FIGHTER_MALE_DWARF
				t-new = 0x6424
			END
			PATCH_IF t-an = 0x6103 BEGIN // FIGHTER_MALE_HALFLING
				t-new = 0x6426
			END
			PATCH_IF (t-an = 0x6110) OR (t-an = 0x6115) BEGIN // FIGHTER_FEMALE_HUMAN
				t-new = 0x6421
			END
			PATCH_IF t-an = 0x6111 BEGIN // FIGHTER_FEMALE_ELF
				t-new = 0x6423
			END
			PATCH_IF (t-an = 0x6112) OR (t-an = 0x6113) OR (t-an = 0x6114) BEGIN // FIGHTER_FEMALE_HALFLING
				t-new = 0x6427
			END
			PATCH_IF (t-an = 0x6200) OR (t-an = 0x6205) BEGIN // MAGE_MALE_HUMAN
				t-new = 0x6430
			END
			PATCH_IF t-an = 0x6201 BEGIN // MAGE_MALE_ELF
				t-new = 0x6432
			END
			PATCH_IF (t-an = 0x6202) OR (t-an = 0x6204) BEGIN // MAGE_MALE_DWARF
				t-new = 0x6434
			END
			PATCH_IF (t-an = 0x6210) OR (t-an = 0x6215) BEGIN // MAGE_FEMALE_HUMAN
				t-new = 0x6431
			END
			PATCH_IF t-an = 0x6211 BEGIN // MAGE_FEMALE_ELF
				t-new = 0x6433
			END
			PATCH_IF (t-an = 0x6300) OR (t-an = 0x6305) BEGIN // THIEF_MALE_HUMAN
				t-new = 0x6440
			END
			PATCH_IF t-an = 0x6301 BEGIN // THIEF_MALE_ELF
				t-new = 0x6442
			END
			PATCH_IF (t-an = 0x6302) OR (t-an = 0x6304) BEGIN // THIEF_MALE_DWARF
				t-new = 0x6444
			END
			PATCH_IF t-an = 0x6303 BEGIN // THIEF_MALE_HALFLING
				t-new = 0x6446
			END
			PATCH_IF (t-an = 0x6310) OR (t-an = 0x6315) BEGIN // THIEF_FEMALE_HUMAN
				t-new = 0x6441
			END
			PATCH_IF t-an = 0x6311 BEGIN // THIEF_FEMALE_ELF
				t-new = 0x6443
			END
			PATCH_IF (t-an = 0x6212) OR (t-an = 0x6214) OR (t-an = 0x6312) OR (t-an = 0x6313) OR (t-an = 0x6314) BEGIN // THIEF_FEMALE_HALFLING
				t-new = 0x6447
			END
			WRITE_SHORT (t-cf + 0x28) t-new
			LOOKUP_IDS_SYMBOL_OF_INT t-ant animate t-an
			LOOKUP_IDS_SYMBOL_OF_INT t-newt animate t-new
			INNER_ACTION BEGIN
				SILENT
				APPEND_OUTER ~infinityanimations/batch/t-gamlog.txt~ ~%t-to%	%t-cn%	%t-nm%	%t-diff%	%t-an%	%t-ant%	%t-new%	%t-newt%~
				VERBOSE
			END
		END
	END
END	// of DEFINE_PATCH_MACRO t-bg1gam


ACTION_FOR_EACH dir IN ~save~ ~mpsave~ BEGIN
	ACTION_IF (DIRECTORY_EXISTS ~%dir%~) BEGIN
		ACTION_CLEAR_ARRAY t-sv
		GET_DIRECTORY_ARRAY t-sv ~%dir%~ ~~

		ACTION_PHP_EACH t-sv AS t-from => t-to BEGIN
			PRINT ~%t06% %t-to% %t07%~ // ~Patch %t-to% [Y/N]?~ //Patch [save] [Y/N]?
			ACTION_READLN t-rds
			ACTION_IF (~%t-rds%~ STRING_EQUAL_CASE ~y~ = 1) BEGIN
				ACTION_IF FILE_EXISTS ~%t-to%/baldur.gam~ BEGIN
					PRINT ~%t10% %t-to% ...~ // Updating .gam file
					COPY ~%t-to%/baldur.gam~ ~%t-to%/baldur.gam~
						PATCH_IF SOURCE_SIZE > 0xb3 BEGIN
							SPRINT t-sav ~baldur.gam~
							SPRINT t-xt ~gam~
							READ_LONG 0x20 t-pf								// Party members offset
							READ_LONG 0x24 t-pc								// Party members count
							FOR (i = 0 ; i < t-pc ; i += 1) BEGIN
								READ_LONG (t-pf + i * 0x160 + 4) t-cf		// CRE file offset
								READ_ASCII (t-pf + i * 0x160 + 0xc) t-cn	// CRE file
								LPM t-bg1gam
							END
							READ_LONG 0x30 t-pf								// Non-party members offset
							READ_LONG 0x34 t-pc								// Non-party members count
							FOR (i = 0 ; i < t-pc ; i += 1) BEGIN
								READ_LONG (t-pf + i * 0x160 + 4) t-cf		// CRE file offset
								READ_ASCII (t-pf + i * 0x160 + 0xc) t-cn	// CRE file
								LPM t-bg1gam
							END
						END
					BUT_ONLY
				END

				ACTION_IF FILE_EXISTS ~%t-to%/baldur.sav~ BEGIN
					PRINT ~%t11% in %t-to% ...~	// Updating .sav file
					COPY ~%t-to%/baldur.sav~ ~%t-to%/baldur.sav~
						EDIT_SAV_FILE 1 BEGIN
							SPRINT t-sav ~%SAV_FILE%~
							TO_LOWER t-sav
							lnd = STRING_LENGTH ~%t-sav%~
							INNER_PATCH ~%t-sav%~ BEGIN
								READ_ASCII (lnd - 4) t-fs (1)								// Read 4th character from end
								PATCH_IF (~%t-fs%~ STRING_EQUAL ~.~ = 0) BEGIN				// If not a dot
									READ_ASCII (lnd - 4) t-xt (3)							// Read extension
									READ_ASCII 0 t-sav (lnd - 1)							// Trim trailing null
								END ELSE BEGIN
									READ_ASCII (lnd - 3) t-xt (3)							// Read extension
								END
							END
							PATCH_IF (~%t-xt%~ STRING_EQUAL ~are~ = 1) BEGIN
								READ_LONG 0x54 t-pf											// Actors offset
								READ_SHORT 0x58 t-pc										// Actors count
								FOR (i = 0 ; i < t-pc ; i += 1) BEGIN						// Cycle through .sav actors
									READ_BYTE (t-pf + i * 0x110 + 0x28) t-fl				// Flags
									PATCH_IF ((t-fl BAND 0b00000001) = 0b00000000) BEGIN	// If CRE embedded
										READ_ASCII (t-pf + i * 0x110 + 0x80) t-cn			// CRE file
										READ_LONG (t-pf + i * 0x110 + 0x88) t-cf			// CRE file offset
										LPM t-animfix
									END
								END
							END
						END
					BUT_ONLY
				END
			END
		END
	END ELSE BEGIN
		MKDIR ~%dir%~
	END
END
