/* ======================================================================================================================================================================= *
 *  v 6.0.0                                                                                                                                                                *
 *                           M O I N E S S ' S    A V A T A R S    f o r    I A    C O M P O N E N T    ( 7 0 0 0 - 7 0 1 0 - 7 0 2 0 - 7 0 3 0 )                          *
 *                                                                                                                                                                         *
 * ======================================================================================================================================================================= *
 *  This component assigns some creatures distinctive Moinesse's animations.                                                                                               *
 * ======================================================================================================================================================================= *
 *  change-log:                                                                                                                                                            *
 *  -----------                                                                                                                                                            *
 *      - Externalized lists of creatures to be patched into arrays (built in gw_ia_moinesse_anim_arrays.tph library) for easier maintenance.                              *
 *      - Added new tutu variables to avoid overwriting BG and BG2 files having the same names.                                                                            *
 *      - Externalized random seed, from now on automatically called by gw_set_random_value function (gw_functions.tpa library).                                           *
 *      - Integrated Miloch's IA Moinesse Ninja Fix, necessary if both Infinity Animations and Angelo are installed (#221).                                                *
 *      - Rewrote animation ID patching to solve EE games compatibility: replaced WRITE_SHORT 0x28 hexcode with WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~animation name~)   *
 *        and used new %ia_townie_curst_female_pst% and %ia_townie_curst_male_pst% variables to patch files according to the game.                                         *
 * ======================================================================================================================================================================= */

/* ------------------------------------------------------------------------------------------------- *
 *                            CREATURES                                                        line  *
 * ------------------------------------------------------------------------------------------------- *
 *  Male Human Barbarians get the moinesse_barbarian_male_human animation                    #   50  *
 *  Female Human Druids get the moinesse_druid_female_human animation                        #   73  *
 *  Female Human Fighters get the moinesse_fighter_female_human animation                    #   98  *
 *  Female Elf Mages get the moinesse_mage_female_elf animation                              #  127  *
 *  Female Human Mages get the moinesse_mage_female_human animation                          #  152  *
 *  Some Female Human Thieves get the moinesse_thief_female_human animation                  #  177  *
 *  Male Human Ninjas get the moinesse_ninja_male_human animation                            #  205  *
 *  Male Human Assassins get the moinesse_ninja_male_human animation                         #  237  *
 *  Male Vampires get the moinesse_vampire animation                                         #  274  *
 * ------------------------------------------------------------------------------------------------- */

PRINT @28 // ~Patching creature files...~
SILENT

/* ============================== *
 *  Loads creatures lists arrays  *
 * ============================== */
INCLUDE ~%MOD_FOLDER%/arrays/gw_ia_moinesse_anim_arrays.tph~
OUTER_SET ia_townie_curst_female_pst = IDS_OF_SYMBOL (animate ~TOWNIE_CURST_FEMALE_PST~)
OUTER_SET ia_townie_curst_male_pst   = IDS_OF_SYMBOL (animate ~TOWNIE_CURST_MALE_PST~)


/* =========================== *
 *  Initialize random numbers  *
 * =========================== */
RANDOM_SEED null


/* ======================================================================= *
 *  Male Human Barbarians get the moinesse_barbarian_male_human animation  *
 * ======================================================================= */
ACTION_PHP_EACH GW_moinesse_barbarian_male_human AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_percentage = EVAL "%rma%" RET rmb = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmb > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~MOINESSE_BARBARIAN_MALE_HUMAN~) // original 0x683d - EE depends on installation
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_moinesse_barbarian_male_human


/* =================================================================== *
 *  Female Human Druids get the moinesse_druid_female_human animation  *
 * =================================================================== */
ACTION_PHP_EACH GW_moinesse_druid_female_human AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_percentage = EVAL "%rma%" RET rmb = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmb > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~MOINESSE_DRUID_FEMALE_HUMAN~) // original 0x6845 - EE depends on installation
				WRITE_BYTE 0x237 2  // Sex (female)
				WRITE_BYTE 0x275 2  // Gender (female)
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_moinesse_druid_female_human


/* ======================================================================= *
 *  Female Human Fighters get the moinesse_fighter_female_human animation  *
 * ======================================================================= */
ACTION_PHP_EACH GW_moinesse_fighter_female_human AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_percentage = EVAL "%rma%" RET rmb = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmb > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~MOINESSE_FIGHTER_FEMALE_HUMAN~) // original 0x6846 - EE depends on installation
				WRITE_BYTE 0x271 1      // General (humanoid)
				WRITE_BYTE 0x237 2      // Sex (female)
				// If not summoned
				PATCH_IF BYTE_AT 0x275 != 6 BEGIN
					WRITE_BYTE 0x275 2  // Gender (female)
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_moinesse_fighter_female_human


/* ============================================================= *
 *  Female Elf Mages get the moinesse_mage_female_elf animation  *
 * ============================================================= */
ACTION_PHP_EACH GW_moinesse_mage_female_elf AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_percentage = EVAL "%rma%" RET rmb = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmb > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~MOINESSE_MAGE_FEMALE_ELF~) // original 0x6841 - EE depends on installation
				WRITE_BYTE 0x237 2  // Sex (female)
				WRITE_BYTE 0x275 2  // Gender (female)
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_moinesse_mage_female_elf


/* ================================================================= *
 *  Female Human Mages get the moinesse_mage_female_human animation  *
 * ================================================================= */
ACTION_PHP_EACH GW_moinesse_mage_female_human AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_percentage = EVAL "%rma%" RET rmb = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmb > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~MOINESSE_MAGE_FEMALE_HUMAN~) // original 0x6847 - EE depends on installation
				WRITE_BYTE 0x237 2  // Sex (female)
				WRITE_BYTE 0x275 2  // Gender (female)
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_moinesse_mage_female_human


/* ======================================================================================================================================== *
 *  Female Human Thieves get the moinesse_thief_female_human animation (unless they've already received the female Curst townie animation)  *
 * ======================================================================================================================================== */
ACTION_PHP_EACH GW_moinesse_thief_female_human AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_percentage = EVAL "%rma%" RET rmb = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmb > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				// If not townie_curst_female IDS_OF_SYMBOL (animate ~TOWNIE_CURST_FEMALE_PST~)
				PATCH_IF LONG_AT 0x28 != ia_townie_curst_female_pst BEGIN // PATCH_IF SHORT_AT 0x28 != 0x5d4c BEGIN
					WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~MOINESSE_THIEF_FEMALE_HUMAN~) // original 0x6848 - EE depends on installation
				END
				WRITE_BYTE 0x237 2  // Sex (female)
				WRITE_BYTE 0x275 2  // Gender (female)
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_moinesse_thief_female_human


/* =============================================================== *
 *  Male Human Ninjas get the moinesse_ninja_male_human animation  *
 *  Miloch's IA Moinesse Ninja Fix: this fix is only necessary if  *
 *  both Infinity Animations and Angelo are installed.             *
 * =============================================================== */
ACTION_PHP_EACH GW_angelo_ninja_male_human AS nb => correct BEGIN

	ACTION_IF FILE_EXISTS_IN_GAME ~%nb%.cre~ BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			  PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			  PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~MOINESSE_NINJA_MALE_HUMAN~) // original 0x683e - EE depends on installation
				WRITE_BYTE 0x2c 66  // Metal color (FADED_BLACK)
				WRITE_BYTE 0x2d 66  // Minor color (FADED_BLACK)
				WRITE_BYTE 0x2e 66  // Major color (FADED_BLACK)
				WRITE_BYTE 0x2f 13  // Skin color (LIGHT_PINKISH_SILVER)
				WRITE_BYTE 0x30 66  // Leather color (FADED_BLACK)
				WRITE_BYTE 0x31 66  // Armor color (FADED_BLACK)
				WRITE_BYTE 0x32 66  // Hair color (FADED_BLACK)
				WRITE_BYTE 0x237 1  // Sex (male)
				WRITE_BYTE 0x275 1  // Gender (male)
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_angelo_ninja_male_human


/* ======================================================================================================================================================== *
 *  Male Human Assassins get the moinesse_ninja_male_human animation (unless they've already received the male Curst townie or the Shadow thief animation)  *
 * ======================================================================================================================================================== */
ACTION_PHP_EACH GW_moinesse_ninja_male_human AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_percentage = EVAL "%rma%" RET rmb = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmb > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				// If not townie_curst_male or shadow_thief IDS_OF_SYMBOL (animate ~TOWNIE_CURST_MALE_PST~)
				PATCH_IF (LONG_AT 0x28 != ia_townie_curst_male_pst) AND (LONG_AT 0x28 != 0x7f36) BEGIN //PATCH_IF (SHORT_AT 0x28 != 0x5d4d) AND (SHORT_AT 0x28 != 0x7f36) BEGIN
					WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~MOINESSE_NINJA_MALE_HUMAN~)	// original 0x683e - EE depends on installation
				END
				WRITE_BYTE 0x2c 65      // Metal color (REALLY_DARK_GRAY)
				WRITE_BYTE 0x2d 242     // Minor color (THIEF_MINOR-PALE_OLIVE)
				WRITE_BYTE 0x2e 241     // Major color (THIEF_MAJOR-OLIVE)
				WRITE_BYTE 0x2f 203     // Skin color (SKIN2-MYRTLE_GREEN)
				WRITE_BYTE 0x30 66      // Leather color (FADED_BLACK)
				WRITE_BYTE 0x31 64      // Armor color (DARK_GRAY)
				WRITE_BYTE 0x237 1      // Sex (male)
				// If not summoned
				PATCH_IF BYTE_AT 0x275 != 6 BEGIN
					WRITE_BYTE 0x275 1  // Gender (male)
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_moinesse_ninja_male_human


/* ================================================== *
 *  Male Vampires get the moinesse_vampire animation  *
 * ================================================== */
ACTION_PHP_EACH GW_moinesse_vampire AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_percentage = EVAL "%rma%" RET rmb = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmb > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~MOINESSE_VAMPIRE~) // original 0x683f - EE depends on installation
				rmv = RANDOM(0 9)
				// Metal color
				PATCH_IF rmv = 0 BEGIN
					t-clr = 0                               // RUST-TINTED_BLACK
				END ELSE BEGIN
					PATCH_IF rmv = 1 BEGIN
						t-clr = 6                           // DARK_SILVER
					END ELSE BEGIN
						PATCH_IF rmv = 2 BEGIN
							t-clr = 19                      // DARK_ROSE_RED
						END ELSE BEGIN
							PATCH_IF rmv = 3 BEGIN
								t-clr = 27                  // GRAY
							END ELSE BEGIN
								PATCH_IF rmv = 4 BEGIN
									t-clr = 47              // PURE_DARK_RED
								END ELSE BEGIN
									PATCH_IF rmv = 5 BEGIN
										t-clr = 65          // REALLY_DARK_GRAY
									END ELSE BEGIN
										PATCH_IF (rmv = 6) OR (rmv = 7) BEGIN
											t-clr = 66      // FADED_BLACK
										END ELSE BEGIN
											PATCH_IF rmv = 8 BEGIN
												t-clr = 93  // DARK_CEMENT_GRAY
											END ELSE BEGIN
												t-clr = 110 // ASH
											END
										END
									END
								END
							END
						END
					END
				END
				WRITE_BYTE 0x2c t-clr   // Metal color

				// Minor color
				rmv = RANDOM(0 9)
				PATCH_IF rmv = 0 BEGIN
					t-clr = 0                                   // RUST-TINTED_BLACK
				END ELSE BEGIN
					PATCH_IF rmv = 1 BEGIN
						t-clr = 27                              // GRAY
					END ELSE BEGIN
						PATCH_IF rmv = 2 BEGIN
							t-clr = 28                          // BLUISH_SILVER
						END ELSE BEGIN
							PATCH_IF rmv = 3 BEGIN
								t-clr = 33                      // CHROME_MAGENTA
							END ELSE BEGIN
								PATCH_IF rmv = 4 BEGIN
									t-clr = 46                  // RED
								END ELSE BEGIN
									PATCH_IF rmv = 5 BEGIN
										t-clr = 47              // PURE_DARK_RED
									END ELSE BEGIN
										PATCH_IF rmv = 6 BEGIN
											t-clr = 60          // DARK_PURPLE
										END ELSE BEGIN
											PATCH_IF rmv = 7 BEGIN
												t-clr = 63      // LIGHT_GRAY
											END ELSE BEGIN
												PATCH_IF rmv = 8 BEGIN
													t-clr = 83  // DARK_BLUISH_GRAY
												END ELSE BEGIN
													t-clr = 101 // METALLIC_RED
												END
											END
										END
									END
								END
							END
						END
					END
				END
				WRITE_BYTE 0x2d t-clr   // Minor color

				// Major color
				rmv = RANDOM(0 9)
				PATCH_IF rmv = 0 BEGIN
					t-clr = 0                       // RUST-TINTED_BLACK
				END ELSE BEGIN
					PATCH_IF (rmv = 1) OR (rmv = 2) BEGIN
						t-clr = 47                  // PURE_DARK_RED
					END ELSE BEGIN
						PATCH_IF rmv = 3 BEGIN
							t-clr = 65              // REALLY_DARK_GRAY
						END ELSE BEGIN
							PATCH_IF (rmv = 4) OR (rmv = 5) OR (rmv = 6) BEGIN
								t-clr = 66          // FADED_BLACK
							END ELSE BEGIN
								PATCH_IF rmv = 7 BEGIN
									t-clr = 70      // LIGHT_METALLIC_RED
								END ELSE BEGIN
									PATCH_IF rmv = 8 BEGIN
										t-clr = 83  // DARK_BLUISH_GRAY
									END ELSE BEGIN
										t-clr = 94  // RHUBARB
									END
								END
							END
						END
					END
				END
				WRITE_BYTE 0x2e t-clr   // Major color

				// Skin color
				rmv = RANDOM(0 9)
				PATCH_IF (rmv = 0) OR (rmv = 1) BEGIN
					t-clr = 5                   // MEDIUM_SILVER
				END ELSE BEGIN
					PATCH_IF rmv = 2 BEGIN
						t-clr = 14              // DARK_PURE_SILVER
					END ELSE BEGIN
						PATCH_IF rmv = 3 BEGIN
							t-clr = 63          // LIGHT_GRAY
						END ELSE BEGIN
							PATCH_IF (rmv = 4) OR (rmv = 5) BEGIN
								t-clr = 79      // LIGHT_SILVER
							END ELSE BEGIN
								PATCH_IF (rmv = 6) OR (rmv = 7) OR (rmv = 8) BEGIN
									t-clr = 105 // OFF_WHITE
								END ELSE BEGIN
									t-clr = 110 // ASH
								END
							END
						END
					END
				END
				WRITE_BYTE 0x2f t-clr   // Skin color

				// Leather color
				rmv = RANDOM(0 9)
				PATCH_IF (rmv = 0) OR (rmv = 1) BEGIN
					t-clr = 0                   // RUST-TINTED_BLACK
				END ELSE BEGIN
					PATCH_IF (rmv = 2) OR (rmv = 3) BEGIN
						t-clr = 47              // PURE_DARK_RED
					END ELSE BEGIN
						PATCH_IF (rmv = 4) OR (rmv = 5) OR (rmv = 6) BEGIN
							t-clr = 66          // FADED_BLACK
						END ELSE BEGIN
							PATCH_IF rmv = 7 BEGIN
								t-clr = 70      // LIGHT_METALLIC_RED
							END ELSE BEGIN
								PATCH_IF rmv = 8 BEGIN
									t-clr = 83  // DARK_BLUISH_GRAY
								END ELSE BEGIN
									t-clr = 94  // RHUBARB
								END
							END
						END
					END
				END
				WRITE_BYTE 0x30 t-clr   // Leather color

				// Armor color
				rmv = RANDOM(0 9)
				PATCH_IF rmv = 0 BEGIN
					t-clr = 0                               // RUST-TINTED_BLACK
				END ELSE BEGIN
					PATCH_IF rmv = 1 BEGIN
						t-clr = 6                           // DARK_SILVER
					END ELSE BEGIN
						PATCH_IF rmv = 2 BEGIN
							t-clr = 19                      // DARK_ROSE_RED
						END ELSE BEGIN
							PATCH_IF rmv = 3 BEGIN
								t-clr = 27                  // GRAY
							END ELSE BEGIN
								PATCH_IF rmv = 4 BEGIN
									t-clr = 47              // PURE_DARK_RED
								END ELSE BEGIN
									PATCH_IF rmv = 5 BEGIN
										t-clr = 65          // REALLY_DARK_GRAY
									END ELSE BEGIN
										PATCH_IF (rmv = 6) OR (rmv = 7) BEGIN
											t-clr = 66      // FADED_BLACK
										END ELSE BEGIN
											PATCH_IF rmv = 8 BEGIN
												t-clr = 93  // DARK_CEMENT_GRAY
											END ELSE BEGIN
												t-clr = 110  // ASH
											END
										END
									END
								END
							END
						END
					END
				END
				WRITE_BYTE 0x31 t-clr   // Armor color

				// Hair color
				rmv = RANDOM(0 9)
				PATCH_IF (rmv = 0) OR (rmv = 1) BEGIN
					t-clr = 0                       // RUST-TINTED_BLACK
				END ELSE BEGIN
					PATCH_IF rmv = 2 BEGIN
						t-clr = 6                   // DARK_SILVER
					END ELSE BEGIN
						PATCH_IF rmv = 3 BEGIN
							t-clr = 21              // DARK_IRON_GRAY
						END ELSE BEGIN
							PATCH_IF rmv = 4 BEGIN
								t-clr = 65          // REALLY_DARK_GRAY
							END ELSE BEGIN
								PATCH_IF (rmv = 5) OR (rmv = 6) OR (rmv = 7) BEGIN
									t-clr = 66      // FADED_BLACK
								END ELSE BEGIN
									PATCH_IF rmv = 8 BEGIN
										t-clr = 75  // SOLID_BLACK
									END ELSE BEGIN
										t-clr = 83  // DARK_BLUISH_GRAY
									END
								END
							END
						END
					END
				END
				WRITE_BYTE 0x32 t-clr   // Hair color

				WRITE_BYTE 0x271 4      // General (undead)
				// If not vampyre
				PATCH_IF BYTE_AT 0x272 != 126 BEGIN
					WRITE_BYTE 0x272 125    // Race (vampire)
				END
				// Fix class
				PATCH_IF (BYTE_AT 0x273 > 20) AND (BYTE_AT 0x273 != 155) AND (BYTE_AT 0x273 != 164) BEGIN
					WRITE_BYTE 0x273 163     // Class (vampire)
				END
				// If sex = female
				PATCH_IF BYTE_AT 0x237 = 2 BEGIN
					WRITE_BYTE 0x275 2  // Gender (female)
					PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
						SAY BATTLE_CRY1 ~~ [VAMPF01]
						SAY BATTLE_CRY2 ~~ [VAMPF02]
					END
					PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
						SAY ATTACK1 ~~ [VAMPF05]
					END
					PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
						SAY DAMAGE ~~ [VAMPF06]
					END
					PATCH_IF SLONG_AT DYING < 1 BEGIN
						SAY DYING ~~ [VAMPF07]
					END
					PATCH_IF SLONG_AT SELECT_COMMON1 < 1 BEGIN
						SAY SELECT_COMMON1 ~~ [VAMPF01]
					END
				END ELSE BEGIN
					PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
						SAY BATTLE_CRY1 ~~ [VAMPP01]
						SAY BATTLE_CRY2 ~~ [VAMPP02]
					END
					PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
						SAY ATTACK1 ~~ [VAMPP05]
					END
					PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
						SAY DAMAGE ~~ [VAMPP06]
					END
					PATCH_IF SLONG_AT DYING < 1 BEGIN
						SAY DYING ~~ [VAMPP07]
					END
					PATCH_IF SLONG_AT SELECT_COMMON1 < 1 BEGIN
						SAY SELECT_COMMON1 ~~ [VAMPP01]
					END
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_moinesse_vampire
