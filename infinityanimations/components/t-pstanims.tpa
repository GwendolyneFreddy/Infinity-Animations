/* ======================================================================================================================================================================= *
 *  v 6.0.0                                                                                                                                                                *
 *                                      M O R E   P S T   A N I M A T I O N S   C O M P O N E N T   ( 7 1 0 - 7 2 0 - 7 3 0 - 7 4 0 )                                      *
 *                                                                                                                                                                         *
 * ======================================================================================================================================================================= *
 *  This component assigns some creatures distinctive PST animations.                                                                                                      *
 * ======================================================================================================================================================================= *
 *  change-log:                                                                                                                                                            *
 *  -----------                                                                                                                                                            *
 *      - Externalized lists of creatures to be patched into arrays (built in gw_ia_more_pst_anim_arrays.tph library) for easier maintenance.                              *
 *      - Tutu variables: added missing tutu variables for BG1 UB (bart8, bart9, edie, ennahe, erlinh, feldan, galkin, hersch, memnis, mercha, mtob4, mtob5, read4,        *
 *        serwen, travel, volose, wilton) and BG:EE/Tutu (gretek). Added new variables to avoid overwriting BG and BG2 files having the same names.                        *
 *      - Externalized random seed in a new library (gw_random.tpp).                                                                                                       *
 *      - Integrated Miloch's updated t-pstanims.tpa patch, tuned by Lollorian. ( http://www.shsforums.net/topic/45383-infinity-animations-from-pst/page-3#entry534274 )   *
 *      - Added glowcheck.tpp patch ( http://www.shsforums.net/topic/45497-glowing-undead/page-2#entry496098 ).                                                            *
 *      - Rewrote animation ID patching to solve EE games compatibility: replaced WRITE_SHORT 0x28 hexcode with WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~animation name~).  *
 * ======================================================================================================================================================================= */

/* ------------------------------------------------------------------------------------------------- *
 *                            CREATURES                                                        line  *
 * ------------------------------------------------------------------------------------------------- *
 *  Female Human Thieves get the townie_curst_female animation                               #   66  *
 *  Male Human Thieves get the townie_curst_male animation                                   #  104  *
 *  Female Monks get the dustman_female animation                                            #  169  *
 *  Dustmen get the dustman_male animation                                                   #  211  *
 *  Male Monks get the dustman_male animation                                                #  245  *
 *  Some Female Ghouls get the ghoul_female animation                                        #  286  *
 *  Some Male Ghouls get the ghoul_male animation                                            #  330  *
 *  Male Human Smiths get the godsman animation                                              #  372  *
 *  Axe- and hammer-wielding bandits and mercenaries get the thug_large animation            #  412  *
 *  Sword- and dagger-wielding bandits and mercenaries get the thug animation                #  465  *
 *  Female Human Peasants get the townie_lower_class_female animation                        #  526  *
 *  Male Human Peasants get the townie_lower_class_male animation                            #  574  *
 *  Male Human Merchants get the merchant animation                                          #  639  *
 *  Female Human Merchants get the midwife animation                                         #  688  *
 *  Harlots get the harlot animation                                                         #  733  *
 *  Skeleton Mages get the skeleton_priest animation                                         #  778  *
 *  Skeletons get the skeleton_worker animation                                              #  821  *
 *  Female Tieflings get the tiefling_female animation                                       #  875  *
 *  Male Tieflings get the tiefling_male animation                                           #  938  *
 *  Male Human Mages get the townie_wizard animation                                         # 1016  *
 *  Female Human Nobles get the townie_upper_class_female or the aasimar_female animation    # 1083  *
 *  Male Human Nobles get the townie_upper_class_male animation                              # 1153  *
 *  Female Zombies get the zombie_female animation                                           # 1202  *
 *  Male Zombies get the zombie_male animation                                               # 1263  *
 * ------------------------------------------------------------------------------------------------- */

SILENT

/* ============================== *
 *  Loads creatures lists arrays  *
 * ============================== */
INCLUDE ~%MOD_FOLDER%/arrays/gw_ia_more_pst_anim_arrays.tph~


/* =========================== *
 *  Initialize random numbers  *
 * =========================== */
ACTION_INCLUDE ~%MOD_FOLDER%/lib/gw_random.tpp~
RANDOM_SEED null

SILENT


/* ============================================================ *
 *  Female Human Thieves get the townie_curst_female animation  *
 * ============================================================ */
ACTION_PHP_EACH GW_townie_curst_female AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmq > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~TOWNIE_CURST_FEMALE_PST~) // original 0x5d4c - EE depends on installation
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-tcf01a]
					SAY BATTLE_CRY2 ~~ [t-tcf01b]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-tcf03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					SAY DAMAGE ~~ [t-tcf07]
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					SAY DYING ~~ [t-tcf09]
				END
				WRITE_BYTE 0x237 2 // Sex (female)
				WRITE_BYTE 0x275 2 // Gender (female)
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_townie_curst_female


/* ======================================================== *
 *  Male Human Thieves get the townie_curst_male animation  *
 * ======================================================== */
ACTION_PHP_EACH GW_townie_curst_male_male AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmq > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				// If not shadow_thief
				PATCH_IF SHORT_AT 0x28 != 0x7f36 BEGIN
					WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~TOWNIE_CURST_MALE_PST~) // original 0x5dbb - EE depends on installation
				END
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-tcm01]
					SAY BATTLE_CRY2 ~~ [t-tcm02a]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-tcm03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					SAY DAMAGE ~~ [t-tcm07]
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					SAY DYING ~~ [t-tcm09]
				END
				PATCH_IF SLONG_AT SELECT_COMMON1 < 1 BEGIN
					SAY SELECT_COMMON1 ~~ [t-tcm02a]
				END
				WRITE_BYTE 0x237 1      // Sex (male)
				// If invalid race
				PATCH_IF (BYTE_AT 0x272 = 4) OR (BYTE_AT 0x272 > 153) BEGIN
					WRITE_BYTE 0x272 1  // Race (human)
				END ELSE BEGIN
					// If wolf
					PATCH_IF BYTE_AT 0x272 = 117 BEGIN
						WRITE_BYTE 0x272 1  // Race (lycanthrope)
					END
				END
				// If mage
				PATCH_IF BYTE_AT 0x273 = 1 BEGIN
					WRITE_BYTE 0x273 13  // Class (mage-thief)
				END ELSE BEGIN
					// If wolf
					PATCH_IF BYTE_AT 0x273 = 143 BEGIN
						WRITE_BYTE 0x273 158 // Class (wolfwere)
					END
				END
				// If not summoned
				PATCH_IF BYTE_AT 0x275 != 6 BEGIN
					WRITE_BYTE 0x275 1  // Gender (male)
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_townie_curst_male


/* =============================================== *
 *  Female Monks get the dustman_female animation  *
 * =============================================== */
ACTION_PHP_EACH GW_dustman_female AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmq > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~DUSTMAN_FEMALE_PST~) // original 0x5dbc - EE depends on installation
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-dmf01]
					SAY BATTLE_CRY2 ~~ [t-dmf02]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-dmf03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					SAY DAMAGE ~~ [t-dmf07]
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					SAY DYING ~~ [t-dmf09]
				END
				WRITE_BYTE 0x237 2      // Sex (female)
				// If invalid class
				PATCH_IF (BYTE_AT 0x273 < 2) OR (BYTE_AT 0x273 > 172) BEGIN
					WRITE_BYTE 0x273 20 // Class (monk)
				END
				WRITE_BYTE 0x275 2      // Gender (female)
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_dustman_female


/* ======================================== *
 *  Dustmen get the dustman_male animation  *
 * ======================================== */
ACTION_PHP_EACH GW_dustman_male AS nb => correct BEGIN

	ACTION_IF FILE_EXISTS_IN_GAME ~%nb%.cre~ BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~DUSTMAN_MALE_PST~) // original 0x5dbe - EE depends on installation
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-dmm01a]
					SAY BATTLE_CRY2 ~~ [t-dmm01b]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-dmm03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					SAY DAMAGE ~~ [t-dmm07]
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					SAY DYING ~~ [t-dmm09]
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_dustman_male


/* =========================================== *
 *  Male Monks get the dustman_male animation  *
 * =========================================== */
ACTION_PHP_EACH GW_dustman_male2 AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmq > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~DUSTMAN_MALE_PST~) // original 0x5dbe - EE depends on installation
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-dmm01a]
					SAY BATTLE_CRY2 ~~ [t-dmm01b]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-dmm03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					SAY DAMAGE ~~ [t-dmm07]
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					SAY DYING ~~ [t-dmm09]
				END
				WRITE_BYTE 0x237 1      // Sex (male)
				// If invalid class
				PATCH_IF (BYTE_AT 0x273 < 20) OR (BYTE_AT 0x273 > 198) BEGIN
					WRITE_BYTE 0x273 20 // Class (monk)
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_dustman_male2


/* =================================================== *
 *  Some Female Ghouls get the ghoul_female animation  *
 * =================================================== */
ACTION_PHP_EACH GW_ghoul_female AS nb => correct BEGIN

	ACTION_IF FILE_EXISTS_IN_GAME ~%nb%.cre~ BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~GHOUL_FEMALE_PST~) // original 0x5dbf - EE depends on installation
				WRITE_BYTE 0x2d 98  // Minor color (LEAF_GREEN)
				WRITE_BYTE 0x2e 39  // Major color (DARK_DIRT_BROWN)
				WRITE_BYTE 0x2f 86  // Skin color (CHROME_GREEN)
				WRITE_BYTE 0x32 79  // Hair color (LIGHT_SILVER)
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-ghf01]
					SAY BATTLE_CRY2 ~~ [t-ghf02]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-ghf03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					SAY DAMAGE ~~ [t-ghf07]
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					SAY DYING ~~ [t-ghf09]
				END
				PATCH_IF SLONG_AT SELECT_COMMON1 < 1 BEGIN
					SAY SELECT_COMMON1 ~~ [t-ghf02]
				END
				WRITE_BYTE 0x237 2 // Sex (female)
				WRITE_BYTE 0x271 4 // General (undead)
				WRITE_BYTE 0x275 2 // Sex (female)
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_ghoul_female


/* =============================================== *
 *  Some Male Ghouls get the ghoul_male animation  *
 * =============================================== */
ACTION_PHP_EACH GW_ghoul_male AS nb => correct BEGIN

	ACTION_IF FILE_EXISTS_IN_GAME ~%nb%.cre~ BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~GHOUL_MALE_PST~) // original 0x5dc0 - EE depends on installation
				WRITE_BYTE 0x2d 107 // Minor color (KHAKI_GRAY)
				WRITE_BYTE 0x2e 43  // Major color (DARK_BEIGE)
				WRITE_BYTE 0x2f 7   // Skin color (LIGHT_METALLIC_GREEN)
				WRITE_BYTE 0x32 28  // Hair color (BLUISH_SILVER)
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-ghm01]
					SAY BATTLE_CRY2 ~~ [t-ghm02]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-ghm03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					SAY DAMAGE ~~ [t-ghm07]
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					SAY DYING ~~ [t-ghm09]
				END
				PATCH_IF SLONG_AT SELECT_COMMON1 < 1 BEGIN
					SAY SELECT_COMMON1 ~~ [t-ghm02]
				END
				WRITE_BYTE 0x272 108 // Race (ghoul)
		  END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_ghoul_male


/* ============================================= *
 *  Male Human Smiths get the godsman animation  *
 * ============================================= */
ACTION_PHP_EACH GW_godsman AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmq > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~GODSMAN_PST~) // original 0x5d53 - EE depends on installation
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-gdm01a]
					SAY BATTLE_CRY2 ~~ [t-gdm01b]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-gdm03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					SAY DAMAGE ~~ [t-gdm07]
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					SAY DYING ~~ [t-gdm09]
				END
				PATCH_IF SLONG_AT SELECT_COMMON1 < 1 BEGIN
					SAY SELECT_COMMON1 ~~ [t-gdm02]
				END
				WRITE_BYTE 0x237 1 // Sex (male)
		  END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_godsman


/* =============================================================================== *
 *  Axe- and hammer-wielding bandits and mercenaries get the thug_large animation  *
 * =============================================================================== */
ACTION_PHP_EACH GW_thug_large AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmq > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~THUG_LARGE_PST~) // original 0x5d54 - EE depends on installation
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-thl01a]
					SAY BATTLE_CRY2 ~~ [t-thl01b]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-thl03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					SAY DAMAGE ~~ [t-thl07]
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					SAY DYING ~~ [t-thl09]
				END
				WRITE_BYTE 0x237 1  // Sex (male)
				// If invalid race
				PATCH_IF BYTE_AT 0x272 > 7 BEGIN
					WRITE_BYTE 0x272 1  // Race (human)
				END
				// If invalid class
				PATCH_IF BYTE_AT 0x273 = 8 BEGIN
					WRITE_BYTE 0x273 9  // Class (fighter_thief)
				END
				READ_LONG    0x2b8 t-io         // Items offset
				READ_SSHORT (t-io + 0x12) t-wpn // Weapon 1
				PATCH_IF t-wpn < 0 BEGIN
					ADD_CRE_ITEM ~%tutu_var%ax1h01~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ EQUIP // Battle Axe (animation consistency)
					PATCH_IF BYTE_AT 0x74 < 2 BEGIN
						WRITE_BYTE 0x74 2  // Axe proficiency
					END
				END
		  END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_thug_large


/* =========================================================================== *
 *  Sword- and dagger-wielding bandits and mercenaries get the thug animation  *
 * =========================================================================== */
ACTION_PHP_EACH GW_thug AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmq > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				If not shadow_thief
				PATCH_IF SHORT_AT 0x28 != 0x7f36 BEGIN
					WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~THUG_PST~) // original 0x5d5d - EE depends on installation
				END
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-ths01]
					SAY BATTLE_CRY2 ~~ [t-ths02]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-ths03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					SAY DAMAGE ~~ [t-ths07]
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					SAY DYING ~~ [t-ths09]
				END
				WRITE_BYTE 0x237 1  // Sex (male)
				WRITE_BYTE 0x271 1  // General (humanoid)
				// If invalid race
				PATCH_IF BYTE_AT 0x272 > 7 BEGIN
					WRITE_BYTE 0x272 1  // Race (human)
				END
				// If invalid class
				PATCH_IF BYTE_AT 0x273 = 8 BEGIN
					WRITE_BYTE 0x273 9  // Class (fighter_thief)
				END
				// If not summoned
				PATCH_IF BYTE_AT 0x275 != 6 BEGIN
					WRITE_BYTE 0x275 1  // Gender (male)
				END
				READ_LONG    0x2b8 t-io         // Items offset
				READ_SSHORT (t-io + 0x12) t-wpn // Weapon 1
				PATCH_IF t-wpn < 0 BEGIN
					ADD_CRE_ITEM ~%tutu_var%dagg01~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ EQUIP // Dagger (animation consistency)
					PATCH_IF BYTE_AT 0x6f < 1 BEGIN
						WRITE_BYTE 0x6f 1   // Small swords proficiency
					END
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_thug


/* =================================================================== *
 *  Female Human Peasants get the townie_lower_class_female animation  *
 * =================================================================== */
ACTION_PHP_EACH GW_townie_lower_class_female AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmq > 6) BEGIN
		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~TOWNIE_LOWER_CLASS_FEMALE_PST~) // original 0x5d55 - EE depends on installation
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-tcf01a]
					SAY BATTLE_CRY2 ~~ [t-tcf01b]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-tcf03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					SAY DAMAGE ~~ [t-tcf07]
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					SAY DYING ~~ [t-tcf09]
				END
				WRITE_BYTE 0x237 2  // Sex (female)
				// If invalid class
				PATCH_IF (BYTE_AT 0x273 = 0) OR (BYTE_AT 0x273 > 198) BEGIN
					WRITE_BYTE 0x273 155    // Class (innocent)
				END
				// If ogre
				PATCH_IF BYTE_AT 0x273 = 125 BEGIN
					WRITE_BYTE 0x273 181    // Class (orc)
				END
				WRITE_BYTE 0x275 2          // Gender (female)
				PATCH_IF (BYTE_AT 0x27b < 17) OR (BYTE_AT 0x27b > 51) BEGIN
					WRITE_BYTE 0x27b 34     // Alignment (neutral)
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_townie_lower_class_female


/* =============================================================== *
 *  Male Human Peasants get the townie_lower_class_male animation  *
 * =============================================================== */
ACTION_PHP_EACH GW_townie_lower_class_male AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmq > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~TOWNIE_LOWER_CLASS_MALE_PST~) // original 0x5d56 - EE depends on installation
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-tcm01]
					SAY BATTLE_CRY2 ~~ [t-tcm02a]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-tcm03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					SAY DAMAGE ~~ [t-tcm07]
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					SAY DYING ~~ [t-tcm09]
				END
				PATCH_IF SLONG_AT SELECT_COMMON1 < 1 BEGIN
					SAY SELECT_COMMON1 ~~ [t-tcm02a]
				END
				// If invalid level
				PATCH_IF BYTE_AT 0x234 = 0 BEGIN
					WRITE_BYTE 0x234 1  // Level 1
				END
				WRITE_BYTE 0x237 1      // Sex (male)
				// If invalid race
				PATCH_IF (BYTE_AT 0x272 = 0) OR (BYTE_AT 0x272 > 159) BEGIN
					WRITE_BYTE 0x272 1  // Race (human)
				END
				// If invalid class
				PATCH_IF (BYTE_AT 0x273 = 0) OR (BYTE_AT 0x273 > 198) BEGIN
					PATCH_IF ((~%nb%~ STRING_EQUAL ~%tutu_var%jebado~ = 1) OR (~%nb%~ STRING_EQUAL ~%tutu_var%noober~ = 1) OR (~%nb%~ STRING_EQUAL ~%tutu_var%sonner~ = 1) OR (~%nb%~ STRING_EQUAL ~%tutu_var%telmen~ = 1)) BEGIN
						WRITE_BYTE 0x273 255 // Class (no_class)
					END
				END ELSE BEGIN
					// If ogre
					PATCH_IF BYTE_AT 0x273 = 125 BEGIN
						WRITE_BYTE 0x273 181 // Class (orc)
					END ELSE BEGIN
						WRITE_BYTE 0x273 155 // Class (innocent)
					END
				END
				WRITE_BYTE 0x275 1      // Gender (male)
				PATCH_IF (BYTE_AT 0x27b < 17) OR (BYTE_AT 0x27b > 51) BEGIN
					WRITE_BYTE 0x27b 34 // Alignment (neutral)
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_townie_lower_class_male


/* ================================================= *
 *  Male Human Merchants get the merchant animation  *
 * ================================================= */
ACTION_PHP_EACH GW_merchant AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmq > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~MERCHANT_PST~) // original 0x5dc1 - EE depends on installation
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-mrc01a]
					SAY BATTLE_CRY2 ~~ [t-mrc01b]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-mrc03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					SAY DAMAGE ~~ [t-mrc07]
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					SAY DYING ~~ [t-mrc09]
				END
				WRITE_BYTE 0x237 1      // Sex (male)
				// If invalid race
				PATCH_IF (BYTE_AT 0x272 = 0) OR (BYTE_AT 0x272 > 159) BEGIN
					WRITE_BYTE 0x272 1  // Race (human)
				END
				// If invalid class
				PATCH_IF (BYTE_AT 0x273 = 0) OR (BYTE_AT 0x273 > 198) BEGIN
					WRITE_BYTE 0x273 155   // Class (innocent)
				END
				WRITE_BYTE 0x275 1         // Gender (male)
				PATCH_IF (BYTE_AT 0x27b < 17) OR (BYTE_AT 0x27b > 51) BEGIN
					WRITE_BYTE 0x27b 34    // Alignment (neutral)
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_merchant


/* ================================================== *
 *  Female Human Merchants get the midwife animation  *
 * ================================================== */
ACTION_PHP_EACH GW_midwife AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND ((rmq > 6) OR (~%SOURCE_RES%~ STRING_EQUAL_CASE ~0xstdg~ = 1)) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~MIDWIFE_PST~) // original 0x5d58 - EE depends on installation
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-mdw01a]
					SAY BATTLE_CRY2 ~~ [t-mdw01b]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-mdw03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					SAY DAMAGE ~~ [t-mdw07]
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					SAY DYING ~~ [t-mdw09]
				END
				WRITE_BYTE 0x237 2  // Sex (female)
				// If invalid class
				PATCH_IF BYTE_AT 0x273 > 198 BEGIN
					WRITE_BYTE 0x273 155   // Class (innocent)
				END
				WRITE_BYTE 0x275 2      // Gender (female)
				PATCH_IF (BYTE_AT 0x27b < 17) OR (BYTE_AT 0x27b > 51) BEGIN
					WRITE_BYTE 0x27b 34 // Alignment (neutral)
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_midwife


/* ================================== *
 *  Harlots get the harlot animation  *
 * ================================== */
ACTION_PHP_EACH GW_harlot AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmq > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~HARLOT_PST~) // original 0x5d59 - EE depends on installation
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-hlt01a]
					SAY BATTLE_CRY2 ~~ [t-hlt01b]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-hlt03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					SAY DAMAGE ~~ [t-hlt07]
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					SAY DYING ~~ [t-hlt09]
				END
				WRITE_BYTE 0x237 2  // Sex (female)
				// If invalid class
				PATCH_IF BYTE_AT 0x273 > 198 BEGIN
					WRITE_BYTE 0x273 155 // Class (innocent)
				END
				WRITE_BYTE 0x275 2      // Gender (female)
				PATCH_IF (BYTE_AT 0x27b < 17) OR (BYTE_AT 0x27b > 51) BEGIN
					WRITE_BYTE 0x27b 34 // Alignment (neutral)
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_harlot


/* ================================================== *
 *  Skeleton Mages get the skeleton_priest animation  *
 * ================================================== */
ACTION_PHP_EACH GW_skeleton_priest AS nb => correct BEGIN

	ACTION_IF FILE_EXISTS_IN_GAME ~%nb%.cre~ BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~SKELETON_PRIEST_PST~) // original 0x5dc2 - EE depends on installation
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-skp01]
					SAY BATTLE_CRY2 ~~ [t-skp02]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-skp03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					SAY DAMAGE ~~ [t-skp07]
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					SAY DYING ~~ [t-skp09]
				END
				PATCH_IF SLONG_AT SELECT_COMMON1 < 1 BEGIN
					SAY SELECT_COMMON1 ~~ [t-skp02]
				END
				WRITE_BYTE 0x237 2  // Sex (female)
				WRITE_BYTE 0x275 2  // Gender (female)
				PATCH_INCLUDE ~infinityanimations/lib/glowcheck.tpp~
				// Quarterstaff +1 (animation consistency)
				REMOVE_CRE_ITEM ~_sw1h04~ ~sw1h04~
				ADD_CRE_ITEM ~%tutu_var%staf02~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON~ EQUIP TWOHANDED
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_skeleton_priest


/* ============================================ *
 *  Skeleton get the skeleton_worker animation  *
 * ============================================ */
ACTION_PHP_EACH GW_skeleton_worker AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmq > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				// If not golem
				PATCH_IF SHORT_AT 0x28 != 0x7f07 BEGIN
					WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~SKELETON_WORKER_PST~) // original 0x5d5b - EE depends on installation
					PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
						SAY BATTLE_CRY1 ~~ [t-skw01a]
						SAY BATTLE_CRY2 ~~ [t-skw01b]
					END
					PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
						SAY ATTACK1 ~~ [t-skw03]
					END
					PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
						SAY DAMAGE ~~ [t-skw07]
					END
					PATCH_IF SLONG_AT DYING < 1 BEGIN
						SAY DYING ~~ [t-skw09]
					END
					PATCH_IF SLONG_AT SELECT_COMMON1 < 1 BEGIN
						SAY SELECT_COMMON1 ~~ [t-skw02a]
						SAY SELECT_COMMON2 ~~ [t-skw02b]
					END
					WRITE_BYTE 0x237 1  // Sex (male)
					WRITE_BYTE 0x271 4  // General (undead)
					PATCH_INCLUDE ~infinityanimations/lib/glowcheck.tpp~
					READ_LONG    0x2b8 t-io         // Items offset
					READ_SSHORT (t-io + 0x12) t-wpn // Weapon 1
					PATCH_IF t-wpn < 0 BEGIN
						// Club (animation consistency)
						ADD_CRE_ITEM ~%utu_var%blun01~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ EQUIP
						PATCH_IF BYTE_AT 0x72 < 2 BEGIN
						WRITE_BYTE 0x72 2   // Blunts proficiency
						END
					END
				END
			END
		BUT_ONLY
	END

END
ACTION_CLEAR_ARRAY GW_skeleton_worker


/* ==================================================== *
 *  Female Tieflings get the tiefling_female animation  *
 * ==================================================== */
ACTION_PHP_EACH GW_tiefling_female AS nb => correct BEGIN

	ACTION_IF FILE_EXISTS_IN_GAME ~%nb%.cre~ BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~TIEFLING_FEMALE_PST~) // original 0x5dc3 - EE depends on installation
				rmc = RANDOM(1 4)
				// If fiends_genies/tiefling_female soundsets not installed or 25% (Female Curst Townie soundset)
				PATCH_IF (rmc = 4) OR (NOT FILE_EXISTS_IN_GAME ~t-tif01.wav~) BEGIN
					PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
						SAY BATTLE_CRY1 ~~ [t-tcf01a]
						SAY BATTLE_CRY2 ~~ [t-tcf01b]
					END
					PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
						SAY ATTACK1 ~~ [t-tcf03]
					END
					PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
						SAY DAMAGE ~~ [t-tcf07]
					END
					PATCH_IF SLONG_AT DYING < 1 BEGIN
						SAY DYING ~~ [t-tcf09]
					END
				// If fiends_genies/tiefling_female soundsets is installed and 75%
				END ELSE BEGIN
					PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
						SAY BATTLE_CRY1 @71021  // Your time in this realm is over! [t-tif01]
					END
					PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
						SAY ATTACK1 ~~ [t-tif03]
					END
					PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
						SAY DAMAGE ~~ [t-tif07]
					END
					PATCH_IF SLONG_AT DYING < 1 BEGIN
						SAY DYING ~~ [t-tif09]
					END
					PATCH_IF SLONG_AT SELECT_COMMON1 < 1 BEGIN
						SAY SELECT_COMMON1 @71022   // Yes? I listen. [t-tif02]
					END
				END
				WRITE_BYTE 0x237 2      // Sex (female)
				WRITE_BYTE 0x271 1      // General (humanoid)
				WRITE_BYTE 0x272 153    // Race (tiefling) // TODO added for bshop02 (Storekeep): was CLERIC_FEMALE_ELF
				READ_BYTE  0x275 gd	    // Gender
				// If not summoned or illusionary
				PATCH_IF (gd != 6) AND (gd != 7) AND (gd != 9) BEGIN
				  WRITE_BYTE 0x275 2    // female
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_tiefling_female


/* ================================================ *
 *  Male Tieflings get the tiefling_male animation  *
 * ================================================ */
ACTION_PHP_EACH GW_tiefling_male AS nb => correct BEGIN

	ACTION_IF FILE_EXISTS_IN_GAME ~%nb%.cre~ BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~TIEFLING_MALE_PST~) // original 0x5dac - EE depends on installation
				rmc = RANDOM(1 3)
				// if fiends_genies/tiefling_male soundsets not installed or 33%
				PATCH_IF (rmc = 3) OR (NOT FILE_EXISTS_IN_GAME ~t-tim01a.wav~) BEGIN
					PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
						SAY BATTLE_CRY1 ~~ [t-tmp01a]
						SAY BATTLE_CRY2 ~~ [t-tmp01b]
					END
					PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
						SAY ATTACK1 ~~ [t-tmp03]
					END
					PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
						SAY DAMAGE ~~ [t-tmp07]
					END
					PATCH_IF SLONG_AT DYING < 1 BEGIN
						SAY DYING ~~ [t-tmp09]
					END
					PATCH_IF SLONG_AT SELECT_COMMON1 < 1 BEGIN
						SAY SELECT_COMMON1 ~~ [t-tmp02]
					END
				// If fiends_genies/tiefling_male soundsets is installed or 66%
				END ELSE BEGIN
					PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
						SAY BATTLE_CRY1 @71001  // You cannot win this fight! [t-tim01a]
						SAY BATTLE_CRY2 @71002  // Into the flames we leap! [t-tim01b]
						SAY BATTLE_CRY3 @71003  // Ha ha ha ha! [t-tim01c]
						SAY BATTLE_CRY4 @71004  // My blood calls for yours and it *will* be satisfied. [t-tim01d]
						SAY BATTLE_CRY5 @71005  // Do you wish to die now? Because I can certainly arrange that. [t-tim01e]
					END
					PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
						SAY ATTACK1 ~~ [t-tim03]
					END
					PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
						SAY DAMAGE ~~ [t-tim07]
					END
					PATCH_IF SLONG_AT DYING < 1 BEGIN
						SAY DYING ~~ [t-tim09]
					END
					PATCH_IF SLONG_AT SELECT_COMMON1 < 1 BEGIN
						SAY SELECT_COMMON1 @71006   // Greetings. [t-tim02a]
						SAY SELECT_COMMON2 @71007   // Yes. [t-tim02b]
						SAY SELECT_COMMON3 @71008   // At your command. [t-tim02c]
						SAY SELECT_COMMON4 @71009   // What do we have here? [t-tim02d]
					END
					PATCH_IF SLONG_AT CRITICAL_MISS < 1 BEGIN
						SAY CRITICAL_MISS @71010		// No. [t-tim11]
					END
					PATCH_IF SLONG_AT SPELL_DISRUPTED < 1 BEGIN
						SAY SPELL_DISRUPTED @71011  // My magic did not work! [t-tim12]
					END
				END
				WRITE_BYTE 0x237 1      // Sex (male)
				WRITE_BYTE 0x271 1      // General (humanoid)
				READ_BYTE  0x275 gd     // Gender
				// If not summoned or illusionary
				PATCH_IF (gd != 6) AND (gd != 7) AND (gd != 9) BEGIN
					WRITE_BYTE 0x275 1  // male
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_tiefling_male


/* ================================================== *
 *  Male Human Mages get the townie_wizard animation  *
 * ================================================== */
ACTION_PHP_EACH GW_townie_wizard AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmq > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~TOWNIE_WIZARD_PST~) // original 0x5dad - EE depends on installation
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-twz01]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-twz03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					rmd = RANDOM(1 2)
					PATCH_IF rmd = 1 BEGIN
						SAY DAMAGE ~~ [t-twz07]
					END ELSE BEGIN
						SAY DAMAGE ~~ [t-twz08]
					END
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					rme = RANDOM(1 2)
					PATCH_IF rme = 1 BEGIN
						SAY DYING ~~ [t-twz09]
					END ELSE BEGIN
						SAY DYING ~~ [t-twz10]
					END
				END
				WRITE_BYTE 0x237 1      // Sex (male)
				// If invalid race
				PATCH_IF BYTE_AT 0x272 = 5 BEGIN
					WRITE_BYTE 0x272 1  // Race (human)
				END
				// If invalid class
				PATCH_IF (BYTE_AT 0x273 = 0) OR (BYTE_AT 0x273 > 198) BEGIN
					WRITE_BYTE 0x273 1  // Class (mage)
				END
				WRITE_BYTE 0x275 1      // Gender (male)
				// If invalid alignment
				PATCH_IF (BYTE_AT 0x27b < 17) OR (BYTE_AT 0x27b > 51) BEGIN
					WRITE_BYTE 0x27b 34 // Alignment (neutral)
				END
				READ_LONG    0x2b8 t-io         // Items offset
				READ_SSHORT (t-io + 0x12) t-wpn // Weapon 1
				PATCH_IF t-wpn < 0 BEGIN
					ADD_CRE_ITEM ~%tutu_var%staf01~ #0 #0 #0 ~UNSTEALABLE~ ~WEAPON1~ EQUIP TWOHANDED // Quarterstaff (animation consistency)
					PATCH_IF BYTE_AT 0x72 < 1 BEGIN
						WRITE_BYTE 0x72 1   // Blunts proficiency
					END
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_townie_wizard


/* ======================================================================================= *
 *  Female Human Nobles get the townie_upper_class_female or the aasimar_female animation  *
 * ======================================================================================= */
ACTION_PHP_EACH GW_female_human_nobles AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmq > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				rmh = RANDOM(1 2)
				PATCH_IF rmh = 1 BEGIN
					WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~TOWNIE_UPPER_CLASS_FEMALE_PST~) // original 0x5dae - EE depends on installation
					PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
						SAY BATTLE_CRY1 ~~ [t-tuf01]
						SAY BATTLE_CRY2 ~~ [t-tuf02]
					END
					PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
						SAY ATTACK1 ~~ [t-tuf03]
					END
					PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
						SAY DAMAGE ~~ [t-tuf07]
					END
					PATCH_IF SLONG_AT DYING < 1 BEGIN
						SAY DYING ~~ [t-tuf09]
					END
				END ELSE BEGIN
					WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~AASIMAR_FEMALE_PST~) // original 0x5dba - EE depends on installation
					PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
						SAY BATTLE_CRY1 ~~ [t-aas01]
						SAY BATTLE_CRY2 ~~ [t-aas02a]
					END
					PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
						SAY ATTACK1 ~~ [t-aas03]
					END
					PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
						SAY DAMAGE ~~ [t-aas07]
					END
					PATCH_IF SLONG_AT DYING < 1 BEGIN
						SAY DYING ~~ [t-aas09]
					END
					PATCH_IF SLONG_AT SELECT_COMMON1 < 1 BEGIN
						SAY SELECT_COMMON1 ~~ [t-aas02b]
					END
				END
				WRITE_BYTE 0x237 2      // Sex (female)
				// If invalid race
				PATCH_IF BYTE_AT 0x272 = 5 BEGIN
					WRITE_BYTE 0x272 1  // Race (human)
				END
				// If invalid class
				PATCH_IF BYTE_AT 0x273 > 198 BEGIN
					WRITE_BYTE 0x273 155 // Class (innocent)
				END
				WRITE_BYTE 0x275 2      // Gender (female)
				PATCH_IF (BYTE_AT 0x27b < 17) OR (BYTE_AT 0x27b > 51) BEGIN
					WRITE_BYTE 0x27b 34 // Alignment (neutral)
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_female_human_nobles


/* ============================================================= *
 *  Male Human Nobles get the townie_upper_class_male animation  *
 * ============================================================= */
ACTION_PHP_EACH GW_townie_upper_class_male AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmq > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~TOWNIE_UPPER_CLASS_MALE_PST~) // original 0x5d62 - EE depends on installation
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-tum01]
					SAY BATTLE_CRY2 ~~ [t-tum02]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-tum03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					SAY DAMAGE ~~ [t-tum07]
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					SAY DYING ~~ [t-tum09]
				END
				WRITE_BYTE 0x237 1      // Sex (male)
				// If invalid race
				PATCH_IF (BYTE_AT 0x272 = 5) OR (BYTE_AT 0x272 > 159) BEGIN
					WRITE_BYTE 0x272 1  // Race (human)
				END
				// If invalid class
				PATCH_IF (BYTE_AT 0x273 = 0) OR (BYTE_AT 0x273 > 198) BEGIN
				  WRITE_BYTE 0x273 155  // Class (innocent)
				END
				WRITE_BYTE 0x275 1      // Gender (male)
				PATCH_IF (BYTE_AT 0x27b < 17) OR (BYTE_AT 0x27b > 51) BEGIN
					WRITE_BYTE 0x27b 34 // Alignment (neutral)
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_townie_upper_class_male


/* ================================================ *
 *  Female Zombies get the zombie_female animation  *
 * ================================================ */
ACTION_PHP_EACH GW_zombie_female AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmq > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~ZOMBIE_FEMALE_PST~) // original 0x5d63 - EE depends on installation
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-zmf01]
					SAY BATTLE_CRY2 ~~ [t-zmf02]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-zmf03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					rmd = RANDOM(1 2)
					PATCH_IF rmd = 1 BEGIN
						SAY DAMAGE ~~ [t-zmf07]
					END ELSE BEGIN
						SAY DAMAGE ~~ [t-zmf08]
					END
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					rme = RANDOM(1 2)
					PATCH_IF rme = 1 BEGIN
						SAY DYING ~~ [t-zmf09]
					END ELSE BEGIN
						SAY DYING ~~ [t-zmf10]
					END
				END
				PATCH_IF SLONG_AT SELECT_COMMON1 < 1 BEGIN
					SAY SELECT_COMMON1 ~~ [t-zmf02]
				END
				WRITE_BYTE 0x237 2          // Sex (female)
				WRITE_BYTE 0x272 148        // Race (zombie)
				READ_BYTE  0x273 cs         // Class
				// If not "innocent"
				PATCH_IF cs != 155 BEGIN
					WRITE_BYTE 0x273 198    // zombie_normal
				END
				READ_BYTE  0x275 gd			// Gender
				// If not summoned or illusionary
				PATCH_IF (gd != 6) AND (gd != 7) AND (gd != 9) BEGIN
					WRITE_BYTE 0x275 2      // female
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_zombie_female


/* ============================================ *
 *  Male Zombies get the zombie_male animation  *
 * ============================================ */
ACTION_PHP_EACH GW_zombie_male AS nb => correct BEGIN

	LAF ~gw_set_random_value~ INT_VAR gw_choice = EVAL "%rmp%" RET rmq = gw_random_value END

	ACTION_IF (FILE_EXISTS_IN_GAME ~%nb%.cre~) AND (rmq > 6) BEGIN

		COPY_EXISTING ~%nb%.cre~ ~override~
			PATCH_INCLUDE ~infinityanimations/lib/fj_cre_validity.tpp~
			PATCH_IF valid BEGIN
				PATCH_INCLUDE ~infinityanimations/lib/fj_cre_reindex.tpp~
				WRITE_LONG 0x28 IDS_OF_SYMBOL (animate ~ZOMBIE_MALE_PST~) // original 0x5d64 - EE depends on installation
				PATCH_IF SLONG_AT BATTLE_CRY1 < 1 BEGIN
					SAY BATTLE_CRY1 ~~ [t-zmm01]
					SAY BATTLE_CRY2 ~~ [t-zmm02]
				END
				PATCH_IF SLONG_AT ATTACK1 < 1 BEGIN
					SAY ATTACK1 ~~ [t-zmm03]
				END
				PATCH_IF SLONG_AT DAMAGE < 1 BEGIN
					rmd = RANDOM(1 2)
					PATCH_IF rmd = 1 BEGIN
						SAY DAMAGE ~~ [t-zmm07]
					END ELSE BEGIN
						SAY DAMAGE ~~ [t-zmm08]
					END
				END
				PATCH_IF SLONG_AT DYING < 1 BEGIN
					rme = RANDOM(1 2)
					PATCH_IF rme = 1 BEGIN
						SAY DYING ~~ [t-zmm09]
					END ELSE BEGIN
						SAY DYING ~~ [t-zmm10]
					END
				END
				PATCH_IF SLONG_AT SELECT_COMMON1 < 1 BEGIN
					SAY SELECT_COMMON1 ~~ [t-zmm02]
				END
				WRITE_BYTE 0x237 1          // Sex (male)
				WRITE_BYTE 0x272 148        // Race (zombie)
				READ_BYTE  0x273 cs         // Class
				// If not "innocent"
				PATCH_IF cs != 155 BEGIN
					WRITE_BYTE 0x273 198    // zombie_normal
				END
				READ_BYTE  0x275 gd	        // Gender
				// If not summoned or illusionary
				PATCH_IF (gd != 6) AND (gd != 7) AND (gd != 9) BEGIN
					WRITE_BYTE 0x275 1      // male
				END
			END
		BUT_ONLY

	END

END
ACTION_CLEAR_ARRAY GW_zombie_male
