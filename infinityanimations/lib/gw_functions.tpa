/* ============================================================================== *
 *  v 6.0.0                                                                       *
 *                                                                                *
 *       M I S C E L L A N E O U S    F U N C T I O N S    &    M A C R O S       *
 *                                                                                *
 * ============================================================================== */

/* ======================================================================================== *
 *  FUNCTION gw_format_string : RE-FORMAT .log files entries to be more friendly readable.  *
 * ---------------------------------------------------------------------------------------- *
 *   INT_VAR                                                                                *
 *      - length is the length of the new string (%string_new%) that will be returned.      *
 *   STR_VAR                                                                                *
 *      - string is the string to be re-formated.                                           *
 *      - hex converts string (any positive decimal number) into a hexadecimal number.      *
 *        If set to "y", string 20738 will return string-new "20738  (0x5102)".             *
 *        If set to "m", string 20738 will return string-new "20738 (0x5102)".              *
 *   RET                                                                                    *
 *      - string_new : This function returns new string to be appended.                     *
 * ======================================================================================== */

DEFINE_PATCH_FUNCTION ~gw_format_string~
    INT_VAR length = 32
    STR_VAR string = ""
            hex    = "n"
    RET     string_new
BEGIN

	SPRINT string_new EVAL "%string%"

	PATCH_IF ("%string%" STR_CMP "") BEGIN

		PATCH_IF ("%hex%" STR_EQ "y") OR ("%hex%" STR_EQ "m") BEGIN

			t-len_string = STRING_LENGTH ~%string%~
			t_string_diff = 5 - t-len_string

			FOR (i = 0 ; i < t_string_diff ; ++i) BEGIN
				SPRINT string_new EVAL "%string_new% "
			END
			
			LPF ~TO_HEX_NUMBER~ INT_VAR value = string minDigits = 4 RET hexNumber END

			PATCH_IF ("%hex%" STR_EQ "y")BEGIN
				SPRINT string_new EVAL "%string_new%  (0x%hexNumber%)"
			END ELSE BEGIN
				SPRINT string_new EVAL "%string_new% (0x%hexNumber%)"
			END

		END ELSE BEGIN

			t-len_string = STRING_LENGTH ~%string%~
			t_string_diff = length - t-len_string

			FOR (i = 0 ; i < t_string_diff ; ++i) BEGIN
				SPRINT string_new EVAL "%string_new% "
			END

		END
//		PATCH_PRINT "DEBUGGING CONTROL string_new = %string_new%-"
	END

END


/* ================================================================================================ *
 *  FUNCTION gw_set_random_value : SETS a random value to decide whether files are patched or not.  *
 * ------------------------------------------------------------------------------------------------ *
 *   STR_VAR                                                                                        *
 *      - gw_percentage : which sub-component is running                                            *
 *            25 = 25% of relevant creatures    -    50  = 50% of relevant creatures                *
 *            75 = 75% of relevant creatures    -    100 = most relevant creatures                  *
 *      - gw_random_value : This function returns the percentage chance to patch files.             *
 * ================================================================================================ */

DEFINE_ACTION_FUNCTION ~gw_set_random_value~
    INT_VAR gw_percentage = 100
    RET     gw_random_value
BEGIN

	// 100% chance
	// -----------
	OUTER_SET gw_random_value = 7

	// 25% chance
	// ----------
	ACTION_IF gw_percentage = 25 BEGIN

		OUTER_SET gw_random_value = RANDOM(1 8)

	END ELSE BEGIN
		
		// 50% chance
		// ----------
		ACTION_IF gw_percentage = 50 BEGIN

			OUTER_SET gw_random_value = RANDOM(5 8)

		END ELSE BEGIN

			// 75% chance
			// ----------
			ACTION_IF gw_percentage = 75 BEGIN

				OUTER_SET gw_random_value = RANDOM(6 9)

			END

		END

	END

END


/* =================================================================================== *
 *  MACRO gw_set_low_anim_names : Defines former _LOW animations slots removed by IA.  *
 * =================================================================================== */

DEFINE_ACTION_MACRO ~gw_set_low_anim_names~
BEGIN

	OUTER_SPRINT low_0x5000 "CLERIC_MALE_HUMAN_LOW"
	OUTER_SPRINT low_0x5001 "CLERIC_MALE_ELF_LOW"
	OUTER_SPRINT low_0x5002 "CLERIC_MALE_DWARF_LOW"
	OUTER_SPRINT low_0x5003 "CLERIC_MALE_HALFLING_LOW"
	OUTER_SPRINT low_0x5010 "CLERIC_FEMALE_HUMAN_LOW"
	OUTER_SPRINT low_0x5011 "CLERIC_FEMALE_ELF_LOW"
	OUTER_SPRINT low_0x5012 "CLERIC_FEMALE_DWARF_LOW"
	OUTER_SPRINT low_0x5013 "CLERIC_FEMALE_HALFLING_LOW"

	OUTER_SPRINT low_0x5100 "FIGHTER_MALE_HUMAN_LOW"
	OUTER_SPRINT low_0x5101 "FIGHTER_MALE_ELF_LOW"
	OUTER_SPRINT low_0x5102 "FIGHTER_MALE_DWARF_LOW"
	OUTER_SPRINT low_0x5103 "FIGHTER_MALE_HALFLING_LOW"
	OUTER_SPRINT low_0x5110 "FIGHTER_FEMALE_HUMAN_LOW"
	OUTER_SPRINT low_0x5111 "FIGHTER_FEMALE_ELF_LOW"
	OUTER_SPRINT low_0x5112 "FIGHTER_FEMALE_DWARF_LOW"
	OUTER_SPRINT low_0x5113 "FIGHTER_FEMALE_HALFLING_LOW"

	OUTER_SPRINT low_0x5200 "MAGE_MALE_HUMAN_LOW"
	OUTER_SPRINT low_0x5201 "MAGE_MALE_ELF_LOW"
	OUTER_SPRINT low_0x5202 "MAGE_MALE_DWARF_LOW"
	OUTER_SPRINT low_0x5210 "MAGE_FEMALE_HUMAN_LOW"
	OUTER_SPRINT low_0x5211 "MAGE_FEMALE_ELF_LOW"
	OUTER_SPRINT low_0x5212 "MAGE_FEMALE_DWARF_LOW"

	OUTER_SPRINT low_0x5300 "THIEF_MALE_HUMAN_LOW"
	OUTER_SPRINT low_0x5301 "THIEF_MALE_ELF_LOW"
	OUTER_SPRINT low_0x5302 "THIEF_MALE_DWARF_LOW"
	OUTER_SPRINT low_0x5303 "THIEF_MALE_HALFLING_LOW"
	OUTER_SPRINT low_0x5310 "THIEF_FEMALE_HUMAN_LOW"
	OUTER_SPRINT low_0x5311 "THIEF_FEMALE_ELF_LOW"
	OUTER_SPRINT low_0x5312 "THIEF_FEMALE_DWARF_LOW"
	OUTER_SPRINT low_0x5313 "THIEF_FEMALE_HALFLING_LOW"

END


/* ================================================================================ *
 *  MACRO gw_set_bg1_characters_anim_id : Defines BG1 Characters animations slots.  *
 * ================================================================================ */

DEFINE_ACTION_MACRO ~gw_set_bg1_characters_anim_id~
BEGIN

/* TODO
0x6212 MAGE_FEMALE_DWARF
0x6214 MAGE_FEMALE_GNOME

OUTER_SET ia-cleric_female_dwarf_bg1      = IDS_OF_SYMBOL (animate ~CLERIC_FEMALE_DWARF_BG1~)
APPEND ~animate.ids~ ~0x6415 CLERIC_FEMALE_DWARF_BG1~       UNLESS ~^0x6415~            // former L_CLERIC_FEMALE_DWARF
OUTER_SET ia-fighter_female_dwarf_bg1     = IDS_OF_SYMBOL (animate ~FIGHTER_FEMALE_DWARF_BG1~)
APPEND ~animate.ids~ ~0x6425 FIGHTER_FEMALE_DWARF_BG1~      UNLESS ~^0x6425~            // former L_FIGHTER_FEMALE_DWARF
OUTER_SET ia-mage_female_dwarf_bg1        = IDS_OF_SYMBOL (animate ~MAGE_FEMALE_DWARF_BG1~)
APPEND ~animate.ids~ ~0x6435 MAGE_FEMALE_DWARF_BG1~         UNLESS ~^0x6435~            // former L_MAGE_FEMALE_DWARF
OUTER_SET ia-thief_female_dwarf_bg1       = IDS_OF_SYMBOL (animate ~THIEF_FEMALE_DWARF_BG1~)
APPEND ~animate.ids~ ~0x6445 THIEF_FEMALE_DWARF_BG1~        UNLESS ~^0x6445~            // former L_THIEF_FEMALE_DWARF
*/

	OUTER_SET ia-cleric_male_human_bg1        = IDS_OF_SYMBOL (animate ~CLERIC_MALE_HUMAN_BG1~)
	OUTER_SET ia-cleric_male_elf_bg1          = IDS_OF_SYMBOL (animate ~CLERIC_MALE_ELF_BG1~)
	OUTER_SET ia-cleric_male_dwarf_bg1        = IDS_OF_SYMBOL (animate ~CLERIC_MALE_DWARF_BG1~)
	OUTER_SET ia-cleric_male_halfling_bg1     = IDS_OF_SYMBOL (animate ~CLERIC_MALE_HALFLING_BG1~)

	OUTER_SET ia-cleric_female_human_bg1      = IDS_OF_SYMBOL (animate ~CLERIC_FEMALE_HUMAN_BG1~)
	OUTER_SET ia-cleric_female_elf_bg1        = IDS_OF_SYMBOL (animate ~CLERIC_FEMALE_ELF_BG1~)
	OUTER_SET ia-cleric_female_halfling_bg1   = IDS_OF_SYMBOL (animate ~CLERIC_FEMALE_HALFLING_BG1~)

	OUTER_SET ia-fighter_male_human_bg1       = IDS_OF_SYMBOL (animate ~FIGHTER_MALE_HUMAN_BG1~)
	OUTER_SET ia-fighter_male_elf_bg1         = IDS_OF_SYMBOL (animate ~FIGHTER_MALE_ELF_BG1~)
	OUTER_SET ia-fighter_male_dwarf_bg1       = IDS_OF_SYMBOL (animate ~FIGHTER_MALE_DWARF_BG1~)
	OUTER_SET ia-fighter_male_halfling_bg1    = IDS_OF_SYMBOL (animate ~FIGHTER_MALE_HALFLING_BG1~)

	OUTER_SET ia-fighter_female_human_bg1     = IDS_OF_SYMBOL (animate ~FIGHTER_FEMALE_HUMAN_BG1~)
	OUTER_SET ia-fighter_female_elf_bg1       = IDS_OF_SYMBOL (animate ~FIGHTER_FEMALE_ELF_BG1~)
	OUTER_SET ia-fighter_female_halfling_bg1  = IDS_OF_SYMBOL (animate ~FIGHTER_FEMALE_HALFLING_BG1~)

	OUTER_SET ia-mage_male_human_bg1          = IDS_OF_SYMBOL (animate ~MAGE_MALE_HUMAN_BG1~)
	OUTER_SET ia-mage_male_elf_bg1            = IDS_OF_SYMBOL (animate ~MAGE_MALE_ELF_BG1~)
	OUTER_SET ia-mage_male_dwarf_bg1          = IDS_OF_SYMBOL (animate ~MAGE_MALE_DWARF_BG1~)

	OUTER_SET ia-mage_female_human_bg1        = IDS_OF_SYMBOL (animate ~MAGE_FEMALE_HUMAN_BG1~)
	OUTER_SET ia-mage_female_elf_bg1          = IDS_OF_SYMBOL (animate ~MAGE_FEMALE_ELF_BG1~)

	OUTER_SET ia-thief_male_human_bg1         = IDS_OF_SYMBOL (animate ~THIEF_MALE_HUMAN_BG1~)
	OUTER_SET ia-thief_male_elf_bg1           = IDS_OF_SYMBOL (animate ~THIEF_MALE_ELF_BG1~)
	OUTER_SET ia-thief_male_dwarf_bg1         = IDS_OF_SYMBOL (animate ~THIEF_MALE_DWARF_BG1~)
	OUTER_SET ia-thief_male_halfling_bg1      = IDS_OF_SYMBOL (animate ~THIEF_MALE_HALFLING_BG1~)

	OUTER_SET ia-thief_female_human_bg1       = IDS_OF_SYMBOL (animate ~THIEF_FEMALE_HUMAN_BG1~)
	OUTER_SET ia-thief_female_elf_bg1         = IDS_OF_SYMBOL (animate ~THIEF_FEMALE_ELF_BG1~)
	OUTER_SET ia-thief_female_halfling_bg1    = IDS_OF_SYMBOL (animate ~THIEF_FEMALE_HALFLING_BG1~)

	ACTION_IF is_ee BEGIN

		OUTER_SET ia-cleric_male_gnome_bg1     = IDS_OF_SYMBOL (animate ~CLERIC_MALE_GNOME_BG1~)
		OUTER_SET ia-cleric_male_halforc_bg1   = IDS_OF_SYMBOL (animate ~CLERIC_MALE_HALFORC_BG1~)

		OUTER_SET ia-cleric_female_dwarf_bg1   = IDS_OF_SYMBOL (animate ~CLERIC_FEMALE_DWARF_BG1~)
		OUTER_SET ia-cleric_female_gnome_bg1   = IDS_OF_SYMBOL (animate ~CLERIC_FEMALE_GNOME_BG1~)
		OUTER_SET ia-cleric_female_halforc_bg1 = IDS_OF_SYMBOL (animate ~CLERIC_FEMALE_HALFORC_BG1~)

		OUTER_SET ia-fighter_male_gnome_bg1     = IDS_OF_SYMBOL (animate ~FIGHTER_MALE_GNOME_BG1~)
		OUTER_SET ia-fighter_male_halforc_bg1   = IDS_OF_SYMBOL (animate ~FIGHTER_MALE_HALFORC_BG1~)

		OUTER_SET ia-fighter_female_dwarf_bg1   = IDS_OF_SYMBOL (animate ~FIGHTER_FEMALE_DWARF_BG1~)
		OUTER_SET ia-fighter_female_gnome_bg1   = IDS_OF_SYMBOL (animate ~FIGHTER_FEMALE_GNOME_BG1~)
		OUTER_SET ia-fighter_female_halforc_bg1 = IDS_OF_SYMBOL (animate ~FIGHTER_FEMALE_HALFORC_BG1~)


		OUTER_SET ia-mage_male_gnome_bg1         = IDS_OF_SYMBOL (animate ~MAGE_MALE_GNOME_BG1~)
		OUTER_SET ia-mage_male_halforc_bg1       = IDS_OF_SYMBOL (animate ~MAGE_MALE_HALFORC_BG1~)

		OUTER_SET ia-mage_female_dwarf_bg1       = IDS_OF_SYMBOL (animate ~MAGE_FEMALE_DWARF_BG1~)
		OUTER_SET ia-mage_female_gnome_bg1       = IDS_OF_SYMBOL (animate ~MAGE_FEMALE_GNOME_BG1~)
		OUTER_SET ia-mage_female_halforc_bg1     = IDS_OF_SYMBOL (animate ~MAGE_FEMALE_HALFORC_BG1~)

		OUTER_SET ia-thief_male_gnome_bg1        = IDS_OF_SYMBOL (animate ~THIEF_MALE_GNOME_BG1~)
		OUTER_SET ia-thief_male_halforc_bg1      = IDS_OF_SYMBOL (animate ~THIEF_MALE_HALFORC_BG1~)

		OUTER_SET ia-thief_female_dwarf_bg1      = IDS_OF_SYMBOL (animate ~THIEF_FEMALE_DWARF_BG1~)
		OUTER_SET ia-thief_female_gnome_bg1      = IDS_OF_SYMBOL (animate ~THIEF_FEMALE_GNOME_BG1~)
		OUTER_SET ia-thief_female_halforc_bg1    = IDS_OF_SYMBOL (animate ~THIEF_FEMALE_HALFORC_BG1~)

	END

END
/*
ACTION_DEFINE_ASSOCIATIVE_ARRAY cd_animation_map BEGIN

0x6000 => 0x5622  // 0x6000 CLERIC_MALE_HUMAN     ==>  0x5622 BG1_CLERIC_HUMAN_MALE
0x6001 => 0x5623  // 0x6001 CLERIC_MALE_ELF       ==>  0x5623 BG1_CLERIC_ELF_MALE
0x6002 => 0x5624  // 0x6002 CLERIC_MALE_DWARF     ==>  0x5624 BG1_CLERIC_DWARF_MALE
0x6003 => 0x5625  // 0x6003 CLERIC_MALE_HALFLING  ==>  0x5625 BG1_CLERIC_HALFLING_MALE
0x6004 => 0x5642  // 
0x6005 => 0x5643  // 

0x6004 CLERIC_MALE_GNOME     ==>  0x5642 BG1_CLERIC_GNOME_MALE = dwarf??? should be halfling
0x6005 CLERIC_MALE_HALFORC   ==>  0x5643 BG1_CLERIC_HALFORC_MALE = human

0x6010 => 0x5626  // 0x6010 CLERIC_FEMALE_HUMAN     ==>  0x5626 BG1_CLERIC_HUMAN_FEMALE
0x6011 => 0x5627  // 0x6011 CLERIC_FEMALE_ELF       ==>  0x5627 BG1_CLERIC_ELF_FEMALE
0x6012 => 0x5628  // 
0x6013 => 0x5629  // 0x6013 CLERIC_FEMALE_HALFLING  ==>  0x5629 BG1_CLERIC_HALFLING_FEMALE
0x6014 => 0x5644  // 
0x6015 => 0x5645  // 

0x6012 CLERIC_FEMALE_DWARF     ==>  0x5628 BG1_CLERIC_DWARF_FEMALE xdfc = male
0x6014 CLERIC_FEMALE_GNOME     ==>  0x5644 BG1_CLERIC_GNOME_FEMALE = dwarf??? should be halfling
0x6015 CLERIC_FEMALE_HALFORC   ==>  0x5645 BG1_CLERIC_HALFORC_FEMALE = human

0x6100 => 0x5600  // 0x6100 FIGHTER_MALE_HUMAN     ==>  0x5600 BG1_FIGHTER_HUMAN_MALE
0x6101 => 0x5601  // 0x6101 FIGHTER_MALE_ELF       ==>  0x5601 BG1_FIGHTER_ELF_MALE
0x6102 => 0x5602  // 0x6102 FIGHTER_MALE_DWARF     ==>  0x5602 BG1_FIGHTER_DWARF_MALE
0x6103 => 0x5603  // 0x6103 FIGHTER_MALE_HALFLING  ==>  0x5603 BG1_FIGHTER_HALFLING_MALE
0x6104 => 0x5630  // 
0x6105 => 0x5631  // 

0x6104 FIGHTER_MALE_GNOME     ==>  0x5630 BG1_FIGHTER_GNOME_MALE = dwarf??? should be halfling
0x6105 FIGHTER_MALE_HALFORC   ==>  0x5631 BG1_FIGHTER_HALFORC_MALE = human

0x6110 => 0x5604  // 0x6110 FIGHTER_FEMALE_HUMAN      ==>  0x5604 BG1_FIGHTER_HUMAN_FEMALE
0x6111 => 0x5605  // 0x6111 FIGHTER_FEMALE_ELF        ==>  0x5605 BG1_FIGHTER_ELF_FEMALE
0x6112 => 0x5606  // 
0x6113 => 0x5607  // 0x6113 FIGHTER_FEMALE_HALFLING   ==>  0x5607 BG1_FIGHTER_HALFLING_FEMALE
0x6114 => 0x5632  // 
0x6115 => 0x5633  // 

0x6112 FIGHTER_FEMALE_DWARF      ==>  0x5606 BG1_FIGHTER_DWARF_FEMALE = male
0x6114 FIGHTER_FEMALE_GNOME      ==>  0x5632 BG1_FIGHTER_GNOME_FEMALE = dwarf??? should be halfling
0x6115 FIGHTER_FEMALE_HALFORC    ==>  0x5633 BG1_FIGHTER_HALFORC_FEMALE = human

0x6200 => 0x5608  // 0x6200 MAGE_MALE_HUMAN     ==>  0x5608 BG1_MAGE_HUMAN_MALE
0x6201 => 0x5609  // 0x6201 MAGE_MALE_ELF       ==>  0x5609 BG1_MAGE_ELF_MALE
0x6202 => 0x5610  // 0x6202 MAGE_MALE_DWARF     ==>  0x5610 BG1_MAGE_DWARF_MALE
0x6204 => 0x5634  // 
0x6205 => 0x5635  // 

0x6204 MAGE_MALE_GNOME     ==>  0x5634 BG1_MAGE_GNOME_MALE = dwarf??? should be halfling
0x6205 MAGE_MALE_HALFORC   ==>  0x5635 BG1_MAGE_HALFORC_MALE = human

0x6210 => 0x5611  // 0x6210 MAGE_FEMALE_HUMAN     ==>  0x5611 BG1_MAGE_HUMAN_FEMALE
0x6211 => 0x5612  // 0x6211 MAGE_FEMALE_ELF       ==>  0x5612 BG1_MAGE_ELF_FEMALE
0x6212 => 0x5613  // 
0x6214 => 0x5636  // 
0x6215 => 0x5637  // 

0x6212 MAGE_FEMALE_DWARF     ==>  0x5613 BG1_MAGE_DWARF_FEMALE = male
0x6214 MAGE_FEMALE_GNOME     ==>  0x5636 BG1_MAGE_GNOME_FEMALE = dwarf??? should be halfling
0x6215 MAGE_FEMALE_HALFORC   ==>  0x5637 BG1_MAGE_HALFORC_FEMALE = human

0x6300 => 0x5614  // 0x6300 THIEF_MALE_HUMAN      ==>  0x5614 BG1_THIEF_HUMAN_MALE
0x6301 => 0x5615  // 0x6301 THIEF_MALE_ELF        ==>  0x5615 BG1_THIEF_ELF_MALE
0x6302 => 0x5616  // 0x6302 THIEF_MALE_DWARF      ==>  0x5616 BG1_THIEF_DWARF_MALE
0x6303 => 0x5617  // 0x6303 THIEF_MALE_HALFLING   ==>  0x5617 BG1_THIEF_HALFLING_MALE
0x6304 => 0x5638  // 
0x6305 => 0x5639  // 

0x6304 THIEF_MALE_GNOME      ==>  0x5638 BG1_THIEF_GNOME_MALE = dwarf??? should be halfling
0x6305 THIEF_MALE_HALFORC    ==>  0x5639 BG1_THIEF_HALFORC_MALE = human

0x6310 => 0x5618  // 0x6310 THIEF_FEMALE_HUMAN      ==>  0x5618 BG1_THIEF_HUMAN_FEMALE
0x6311 => 0x5619  // 0x6311 THIEF_FEMALE_ELF        ==>  0x5619 BG1_THIEF_ELF_FEMALE
0x6312 => 0x5620  // 
0x6313 => 0x5621  // 0x6313 THIEF_FEMALE_HALFLING   ==>  0x5621 BG1_THIEF_HALFLING_FEMALE
0x6314 => 0x5640  // 
0x6315 => 0x5641  // 

0x6312 THIEF_FEMALE_DWARF      ==>  0x5620 BG1_THIEF_DWARF_FEMALE = male
0x6314 THIEF_FEMALE_GNOME      ==>  0x5640 BG1_THIEF_GNOME_FEMALE = dwarf??? should be halfling
0x6315 THIEF_FEMALE_HALFORC    ==>  0x5641 BG1_THIEF_HALFORC_FEMALE = human

END

0x6621 FIGHTER_FEMALE_HUMAN_BG1
*/
